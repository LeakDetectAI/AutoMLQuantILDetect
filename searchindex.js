Search.setIndex({"alltitles": {"API REFERENCE": [[43, null]], "Contents": [[43, "contents"]], "Fit a Classifier to Estimate MI": [[45, "fit-a-classifier-to-estimate-mi"]], "Installation Guide": [[44, null]], "Installation Steps": [[44, "installation-steps"]], "OVERVIEW": [[43, null]], "Private Methods": [[33, "private-methods"]], "Quickstart Guide": [[45, null]], "The autoqild Python package": [[43, null]], "autoqild.automl": [[1, null]], "autoqild.automl.autogluon_classifier": [[2, null]], "autoqild.automl.automl_core": [[3, null]], "autoqild.automl.model_configurations": [[4, null]], "autoqild.automl.tabpfn_classifier": [[5, null]], "autoqild.bayes_search": [[6, null]], "autoqild.bayes_search.bayes_search_cv": [[7, null]], "autoqild.bayes_search.bayes_search_utils": [[8, null]], "autoqild.classifiers": [[9, null]], "autoqild.classifiers.bayes_predictor": [[10, null]], "autoqild.classifiers.blind_classifiers": [[11, null]], "autoqild.classifiers.layers": [[12, null]], "autoqild.classifiers.multi_layer_perceptron": [[13, null]], "autoqild.dataset_readers": [[14, null]], "autoqild.dataset_readers.open_ml_padding_dr": [[15, null]], "autoqild.dataset_readers.open_ml_timming_dr": [[16, null]], "autoqild.dataset_readers.synthetic_data_generator": [[17, null]], "autoqild.dataset_readers.synthetic_data_generator_distance": [[18, null]], "autoqild.dataset_readers.utils": [[19, null]], "autoqild.detectors": [[20, null]], "autoqild.detectors.autogluon_leakage_detector": [[21, null]], "autoqild.detectors.ild_base_class": [[22, null]], "autoqild.detectors.mi_estimator_detector": [[23, null]], "autoqild.detectors.mlp_leakage_detector": [[24, null]], "autoqild.detectors.random_forest_leakage_detector": [[25, null]], "autoqild.detectors.sklearn_leakage_detector": [[26, null]], "autoqild.detectors.tabpfn_leakage_detector": [[27, null]], "autoqild.mi_estimators": [[28, null]], "autoqild.mi_estimators.auto_gluon_estimator": [[29, null]], "autoqild.mi_estimators.gmm_mi_estimator": [[30, null]], "autoqild.mi_estimators.mi_base_class": [[31, null]], "autoqild.mi_estimators.mi_estimator_classification": [[32, null]], "autoqild.mi_estimators.mine_estimator": [[33, null]], "autoqild.mi_estimators.mine_estimator_mse": [[34, null]], "autoqild.mi_estimators.neural_networks_torch": [[35, null]], "autoqild.mi_estimators.pc_softmax_estimator": [[36, null]], "autoqild.mi_estimators.pytorch_utils": [[37, null]], "autoqild.mi_estimators.tab_pfn_estimator": [[38, null]], "autoqild.utilities": [[39, null]], "autoqild.utilities.dimensionality_reduction_techniques": [[40, null]], "autoqild.utilities.metrics": [[41, null]], "autoqild.utilities.statistical_tests": [[42, null]], "\ud83d\udcd6 API References": [[0, null]]}, "docnames": ["api", "api/autoqild.automl", "api/autoqild.automl.autogluon_classifier", "api/autoqild.automl.automl_core", "api/autoqild.automl.model_configurations", "api/autoqild.automl.tabpfn_classifier", "api/autoqild.bayes_search", "api/autoqild.bayes_search.bayes_search_cv", "api/autoqild.bayes_search.bayes_search_utils", "api/autoqild.classifiers", "api/autoqild.classifiers.bayes_predictor", "api/autoqild.classifiers.blind_classifiers", "api/autoqild.classifiers.layers", "api/autoqild.classifiers.multi_layer_perceptron", "api/autoqild.dataset_readers", "api/autoqild.dataset_readers.open_ml_padding_dr", "api/autoqild.dataset_readers.open_ml_timming_dr", "api/autoqild.dataset_readers.synthetic_data_generator", "api/autoqild.dataset_readers.synthetic_data_generator_distance", "api/autoqild.dataset_readers.utils", "api/autoqild.detectors", "api/autoqild.detectors.autogluon_leakage_detector", "api/autoqild.detectors.ild_base_class", "api/autoqild.detectors.mi_estimator_detector", "api/autoqild.detectors.mlp_leakage_detector", "api/autoqild.detectors.random_forest_leakage_detector", "api/autoqild.detectors.sklearn_leakage_detector", "api/autoqild.detectors.tabpfn_leakage_detector", "api/autoqild.mi_estimators", "api/autoqild.mi_estimators.auto_gluon_estimator", "api/autoqild.mi_estimators.gmm_mi_estimator", "api/autoqild.mi_estimators.mi_base_class", "api/autoqild.mi_estimators.mi_estimator_classification", "api/autoqild.mi_estimators.mine_estimator", "api/autoqild.mi_estimators.mine_estimator_mse", "api/autoqild.mi_estimators.neural_networks_torch", "api/autoqild.mi_estimators.pc_softmax_estimator", "api/autoqild.mi_estimators.pytorch_utils", "api/autoqild.mi_estimators.tab_pfn_estimator", "api/autoqild.utilities", "api/autoqild.utilities.dimensionality_reduction_techniques", "api/autoqild.utilities.metrics", "api/autoqild.utilities.statistical_tests", "index", "installation", "start"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "api/autoqild.automl.rst", "api/autoqild.automl.autogluon_classifier.rst", "api/autoqild.automl.automl_core.rst", "api/autoqild.automl.model_configurations.rst", "api/autoqild.automl.tabpfn_classifier.rst", "api/autoqild.bayes_search.rst", "api/autoqild.bayes_search.bayes_search_cv.rst", "api/autoqild.bayes_search.bayes_search_utils.rst", "api/autoqild.classifiers.rst", "api/autoqild.classifiers.bayes_predictor.rst", "api/autoqild.classifiers.blind_classifiers.rst", "api/autoqild.classifiers.layers.rst", "api/autoqild.classifiers.multi_layer_perceptron.rst", "api/autoqild.dataset_readers.rst", "api/autoqild.dataset_readers.open_ml_padding_dr.rst", "api/autoqild.dataset_readers.open_ml_timming_dr.rst", "api/autoqild.dataset_readers.synthetic_data_generator.rst", "api/autoqild.dataset_readers.synthetic_data_generator_distance.rst", "api/autoqild.dataset_readers.utils.rst", "api/autoqild.detectors.rst", "api/autoqild.detectors.autogluon_leakage_detector.rst", "api/autoqild.detectors.ild_base_class.rst", "api/autoqild.detectors.mi_estimator_detector.rst", "api/autoqild.detectors.mlp_leakage_detector.rst", "api/autoqild.detectors.random_forest_leakage_detector.rst", "api/autoqild.detectors.sklearn_leakage_detector.rst", "api/autoqild.detectors.tabpfn_leakage_detector.rst", "api/autoqild.mi_estimators.rst", "api/autoqild.mi_estimators.auto_gluon_estimator.rst", "api/autoqild.mi_estimators.gmm_mi_estimator.rst", "api/autoqild.mi_estimators.mi_base_class.rst", "api/autoqild.mi_estimators.mi_estimator_classification.rst", "api/autoqild.mi_estimators.mine_estimator.rst", "api/autoqild.mi_estimators.mine_estimator_mse.rst", "api/autoqild.mi_estimators.neural_networks_torch.rst", "api/autoqild.mi_estimators.pc_softmax_estimator.rst", "api/autoqild.mi_estimators.pytorch_utils.rst", "api/autoqild.mi_estimators.tab_pfn_estimator.rst", "api/autoqild.utilities.rst", "api/autoqild.utilities.dimensionality_reduction_techniques.rst", "api/autoqild.utilities.metrics.rst", "api/autoqild.utilities.statistical_tests.rst", "index.rst", "installation.rst", "start.rst"], "indexentries": {"__allkeys__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__allkeys__", false]], "__calculate_majority_voting_accuracy__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__calculate_majority_voting_accuracy__", false]], "__calculate_random_classifier_accuracy__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__calculate_random_classifier_accuracy__", false]], "__call__() (autoqild.classifiers.layers.normalizeddense method)": [[12, "autoqild.classifiers.layers.NormalizedDense.__call__", false]], "__clean_up_dataset__ (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.__clean_up_dataset__", false]], "__clean_up_dataset__ (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.__clean_up_dataset__", false]], "__clear_memory__ (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.__clear_memory__", false]], "__close_backup_file__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__close_backup_file__", false]], "__close_file__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__close_file__", false]], "__create_leakage_datasets__ (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.__create_leakage_datasets__", false]], "__create_leakage_datasets__ (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.__create_leakage_datasets__", false]], "__create_results_from_backup__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__create_results_from_backup__", false]], "__format_name__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__format_name__", false]], "__generate_cov_means__ (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.__generate_cov_means__", false]], "__generate_cov_means__ (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.__generate_cov_means__", false]], "__get_goodnessof_fit__ (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.__get_goodnessof_fit__", false]], "__get_training_dataset__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__get_training_dataset__", false]], "__init_results_files__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__init_results_files__", false]], "__initialize_objects__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__initialize_objects__", false]], "__is_fitted__ (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.__is_fitted__", false]], "__is_fitted__ (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.__is_fitted__", false]], "__pytorch_tensor_dataset__ (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse attribute)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.__pytorch_tensor_dataset__", false]], "__read_dataset__ (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.__read_dataset__", false]], "__read_dataset__ (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.__read_dataset__", false]], "__read_majority_accuracies__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__read_majority_accuracies__", false]], "__read_random_accuracies__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__read_random_accuracies__", false]], "__read_results_file__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__read_results_file__", false]], "__store_results__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__store_results__", false]], "__transform__ (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.__transform__", false]], "__transform__ (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.__transform__", false]], "__update_backup_file__ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.__update_backup_file__", false]], "_construct_layers (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron attribute)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron._construct_layers", false]], "_construct_model_ (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron attribute)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron._construct_model_", false]], "_is_fitted_ (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier._is_fitted_", false]], "_is_fitted_ (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector._is_fitted_", false]], "activation (autoqild.classifiers.layers.normalizeddense attribute)": [[12, "autoqild.classifiers.layers.NormalizedDense.activation", false]], "attribute_names (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.attribute_names", false]], "auc_score() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.auc_score", false]], "auto_stack (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.auto_stack", false]], "autogluonclassifier (class in autoqild.automl.autogluon_classifier)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier", false]], "autogluonleakagedetector (class in autoqild.detectors.autogluon_leakage_detector)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector", false]], "automigluonestimator (class in autoqild.mi_estimators.auto_gluon_estimator)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator", false]], "automlclassifier (class in autoqild.automl.automl_core)": [[3, "autoqild.automl.automl_core.AutomlClassifier", false]], "autoqild.automl": [[1, "module-autoqild.automl", false]], "autoqild.automl.autogluon_classifier": [[2, "module-autoqild.automl.autogluon_classifier", false]], "autoqild.automl.automl_core": [[3, "module-autoqild.automl.automl_core", false]], "autoqild.automl.model_configurations": [[4, "module-autoqild.automl.model_configurations", false]], "autoqild.automl.tabpfn_classifier": [[5, "module-autoqild.automl.tabpfn_classifier", false]], "autoqild.bayes_search": [[6, "module-autoqild.bayes_search", false]], "autoqild.bayes_search.bayes_search_cv": [[7, "module-autoqild.bayes_search.bayes_search_cv", false]], "autoqild.bayes_search.bayes_search_utils": [[8, "module-autoqild.bayes_search.bayes_search_utils", false]], "autoqild.classifiers": [[9, "module-autoqild.classifiers", false]], "autoqild.classifiers.bayes_predictor": [[10, "module-autoqild.classifiers.bayes_predictor", false]], "autoqild.classifiers.blind_classifiers": [[11, "module-autoqild.classifiers.blind_classifiers", false]], "autoqild.classifiers.layers": [[12, "module-autoqild.classifiers.layers", false]], "autoqild.classifiers.multi_layer_perceptron": [[13, "module-autoqild.classifiers.multi_layer_perceptron", false]], "autoqild.dataset_readers": [[14, "module-autoqild.dataset_readers", false]], "autoqild.dataset_readers.open_ml_padding_dr": [[15, "module-autoqild.dataset_readers.open_ml_padding_dr", false]], "autoqild.dataset_readers.open_ml_timming_dr": [[16, "module-autoqild.dataset_readers.open_ml_timming_dr", false]], "autoqild.dataset_readers.synthetic_data_generator": [[17, "module-autoqild.dataset_readers.synthetic_data_generator", false]], "autoqild.dataset_readers.synthetic_data_generator_distance": [[18, "module-autoqild.dataset_readers.synthetic_data_generator_distance", false]], "autoqild.dataset_readers.utils": [[19, "module-autoqild.dataset_readers.utils", false]], "autoqild.detectors": [[20, "module-autoqild.detectors", false]], "autoqild.detectors.autogluon_leakage_detector": [[21, "module-autoqild.detectors.autogluon_leakage_detector", false]], "autoqild.detectors.ild_base_class": [[22, "module-autoqild.detectors.ild_base_class", false]], "autoqild.detectors.mi_estimator_detector": [[23, "module-autoqild.detectors.mi_estimator_detector", false]], "autoqild.detectors.mlp_leakage_detector": [[24, "module-autoqild.detectors.mlp_leakage_detector", false]], "autoqild.detectors.random_forest_leakage_detector": [[25, "module-autoqild.detectors.random_forest_leakage_detector", false]], "autoqild.detectors.sklearn_leakage_detector": [[26, "module-autoqild.detectors.sklearn_leakage_detector", false]], "autoqild.detectors.tabpfn_leakage_detector": [[27, "module-autoqild.detectors.tabpfn_leakage_detector", false]], "autoqild.mi_estimators": [[28, "module-autoqild.mi_estimators", false]], "autoqild.mi_estimators.auto_gluon_estimator": [[29, "module-autoqild.mi_estimators.auto_gluon_estimator", false]], "autoqild.mi_estimators.gmm_mi_estimator": [[30, "module-autoqild.mi_estimators.gmm_mi_estimator", false]], "autoqild.mi_estimators.mi_base_class": [[31, "module-autoqild.mi_estimators.mi_base_class", false]], "autoqild.mi_estimators.mi_estimator_classification": [[32, "module-autoqild.mi_estimators.mi_estimator_classification", false]], "autoqild.mi_estimators.mine_estimator": [[33, "module-autoqild.mi_estimators.mine_estimator", false]], "autoqild.mi_estimators.mine_estimator_mse": [[34, "module-autoqild.mi_estimators.mine_estimator_mse", false]], "autoqild.mi_estimators.neural_networks_torch": [[35, "module-autoqild.mi_estimators.neural_networks_torch", false]], "autoqild.mi_estimators.pc_softmax_estimator": [[36, "module-autoqild.mi_estimators.pc_softmax_estimator", false]], "autoqild.mi_estimators.pytorch_utils": [[37, "module-autoqild.mi_estimators.pytorch_utils", false]], "autoqild.mi_estimators.tab_pfn_estimator": [[38, "module-autoqild.mi_estimators.tab_pfn_estimator", false]], "autoqild.utilities": [[39, "module-autoqild.utilities", false]], "autoqild.utilities.dimensionality_reduction_techniques": [[40, "module-autoqild.utilities.dimensionality_reduction_techniques", false]], "autoqild.utilities.metrics": [[41, "module-autoqild.utilities.metrics", false]], "autoqild.utilities.statistical_tests": [[42, "module-autoqild.utilities.statistical_tests", false]], "autotabpfnclassifier (class in autoqild.automl.tabpfn_classifier)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier", false]], "base_detector (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector attribute)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.base_detector", false]], "base_detector (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.base_detector", false]], "base_directory (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.base_directory", false]], "base_estimator (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator attribute)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.base_estimator", false]], "base_estimator (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator attribute)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.base_estimator", false]], "base_estimator (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator attribute)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.base_estimator", false]], "base_learner (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator attribute)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.base_learner", false]], "base_learner (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator attribute)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.base_learner", false]], "base_learner (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator attribute)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.base_learner", false]], "base_path (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.base_path", false]], "batchnorm (autoqild.classifiers.layers.normalizeddense attribute)": [[12, "autoqild.classifiers.layers.NormalizedDense.batchnorm", false]], "bayes_predictor_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.bayes_predictor_mi", false]], "bayes_predictor_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.bayes_predictor_mi", false]], "bayes_predictor_pc_softmax_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.bayes_predictor_pc_softmax_mi", false]], "bayes_predictor_pc_softmax_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.bayes_predictor_pc_softmax_mi", false]], "bayespredictor (class in autoqild.classifiers.bayes_predictor)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor", false]], "bayessearchcv (class in autoqild.bayes_search.bayes_search_cv)": [[7, "autoqild.bayes_search.bayes_search_cv.BayesSearchCV", false]], "best_aic (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_aic", false]], "best_bic (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_bic", false]], "best_gmm_model (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_gmm_model", false]], "best_likelihood (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_likelihood", false]], "best_mi (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_mi", false]], "best_model (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_model", false]], "best_seed (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.best_seed", false]], "bin_ce() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.bin_ce", false]], "calculate_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.calculate_mi", false]], "calculate_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.calculate_mi", false]], "class_label (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.class_label", false]], "class_labels (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.class_labels", false]], "class_labels (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.class_labels", false]], "class_net (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.class_net", false]], "class_probabilities (autoqild.classifiers.blind_classifiers.priorclassifier attribute)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier.class_probabilities", false]], "classes_ (autoqild.classifiers.blind_classifiers.priorclassifier attribute)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier.classes_", false]], "classficationmiestimator (class in autoqild.mi_estimators.mi_estimator_classification)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator", false]], "classnet (class in autoqild.mi_estimators.neural_networks_torch)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet", false]], "clean_class_label() (in module autoqild.dataset_readers.utils)": [[19, "autoqild.dataset_readers.utils.clean_class_label", false]], "cls_model (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.cls_model", false]], "columns (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.columns", false]], "convert_to_dataframe() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.convert_to_dataframe", false]], "convert_value() (in module autoqild.bayes_search.bayes_search_utils)": [[8, "autoqild.bayes_search.bayes_search_utils.convert_value", false]], "correct_class (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.correct_class", false]], "correct_class (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.correct_class", false]], "covariance_type (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.covariance_type", false]], "covariances (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.covariances", false]], "covariances (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.covariances", false]], "create_classification_model() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.create_classification_model", false]], "create_dimensionality_reduction_model() (in module autoqild.utilities.dimensionality_reduction_techniques)": [[40, "autoqild.utilities.dimensionality_reduction_techniques.create_dimensionality_reduction_model", false]], "cv_iterations (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.cv_iterations", false]], "cv_iterator (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.cv_iterator", false]], "data_frame_raw (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.data_frame_raw", false]], "dataset (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.dataset", false]], "dataset_dictionary (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.dataset_dictionary", false]], "dataset_dictionary (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.dataset_dictionary", false]], "dataset_id (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.dataset_id", false]], "dataset_obj (autoqild.classifiers.bayes_predictor.bayespredictor attribute)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.dataset_obj", false]], "dataset_properties (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.dataset_properties", false]], "decision_function() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.decision_function", false]], "decision_function() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.decision_function", false]], "decision_function() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.decision_function", false]], "decision_function() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.decision_function", false]], "decision_function() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.decision_function", false]], "decision_function() (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator method)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.decision_function", false]], "decision_function() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.decision_function", false]], "decision_function() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.decision_function", false]], "decision_function() (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator method)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.decision_function", false]], "decision_function() (autoqild.mi_estimators.mine_estimator.minemiestimator method)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.decision_function", false]], "decision_function() (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse method)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.decision_function", false]], "decision_function() (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator method)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.decision_function", false]], "decision_function() (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator method)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.decision_function", false]], "delay (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.delay", false]], "delete_tmp_folder_after_terminate (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.delete_tmp_folder_after_terminate", false]], "dense (autoqild.classifiers.layers.normalizeddense attribute)": [[12, "autoqild.classifiers.layers.NormalizedDense.dense", false]], "detect() (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector method)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.detect", false]], "detect() (autoqild.detectors.ild_base_class.informationleakagedetector method)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.detect", false]], "detect() (autoqild.detectors.mi_estimator_detector.miestimationleakagedetector method)": [[23, "autoqild.detectors.mi_estimator_detector.MIEstimationLeakageDetector.detect", false]], "detect() (autoqild.detectors.mlp_leakage_detector.mlpleakagedetector method)": [[24, "autoqild.detectors.mlp_leakage_detector.MLPLeakageDetector.detect", false]], "detect() (autoqild.detectors.random_forest_leakage_detector.randomforestleakagedetector method)": [[25, "autoqild.detectors.random_forest_leakage_detector.RandomForestLeakageDetector.detect", false]], "detect() (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector method)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.detect", false]], "detect() (autoqild.detectors.tabpfn_leakage_detector.tabpfnleakagedetector method)": [[27, "autoqild.detectors.tabpfn_leakage_detector.TabPFNLeakageDetector.detect", false]], "detection_method (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.detection_method", false]], "device (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.device", false]], "device (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.device", false]], "device (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse attribute)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.device", false]], "device (autoqild.mi_estimators.neural_networks_torch.classnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.device", false]], "device (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.device", false]], "ent_y (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.ent_y", false]], "entropy_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.entropy_y", false]], "entropy_y() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.entropy_y", false]], "estimate_mi() (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator method)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator method)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.mine_estimator.minemiestimator method)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse method)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator method)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.estimate_mi", false]], "estimate_mi() (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator method)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.estimate_mi", false]], "estimators (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.estimators", false]], "eval_metric (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.eval_metric", false]], "evaluate_scores() (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector method)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.evaluate_scores", false]], "evaluate_scores() (autoqild.detectors.ild_base_class.informationleakagedetector method)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.evaluate_scores", false]], "evaluate_scores() (autoqild.detectors.mlp_leakage_detector.mlpleakagedetector method)": [[24, "autoqild.detectors.mlp_leakage_detector.MLPLeakageDetector.evaluate_scores", false]], "evaluate_scores() (autoqild.detectors.random_forest_leakage_detector.randomforestleakagedetector method)": [[25, "autoqild.detectors.random_forest_leakage_detector.RandomForestLeakageDetector.evaluate_scores", false]], "evaluate_scores() (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector method)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.evaluate_scores", false]], "evaluate_scores() (autoqild.detectors.tabpfn_leakage_detector.tabpfnleakagedetector method)": [[27, "autoqild.detectors.tabpfn_leakage_detector.TabPFNLeakageDetector.evaluate_scores", false]], "exclude_model_types (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.exclude_model_types", false]], "factor (in module autoqild.dataset_readers.utils)": [[19, "autoqild.dataset_readers.utils.FACTOR", false]], "false_negative_rate() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.false_negative_rate", false]], "false_positive_rate() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.false_positive_rate", false]], "fanos_adjusted_lower_bound() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.fanos_adjusted_lower_bound", false]], "fanos_lower_bound() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.fanos_lower_bound", false]], "final_loss (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.final_loss", false]], "final_loss (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse attribute)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.final_loss", false]], "final_loss (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.final_loss", false]], "fit() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.fit", false]], "fit() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.fit", false]], "fit() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.fit", false]], "fit() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.fit", false]], "fit() (autoqild.classifiers.blind_classifiers.priorclassifier method)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier.fit", false]], "fit() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.fit", false]], "fit() (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector method)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.fit", false]], "fit() (autoqild.detectors.ild_base_class.informationleakagedetector method)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.fit", false]], "fit() (autoqild.detectors.mi_estimator_detector.miestimationleakagedetector method)": [[23, "autoqild.detectors.mi_estimator_detector.MIEstimationLeakageDetector.fit", false]], "fit() (autoqild.detectors.mlp_leakage_detector.mlpleakagedetector method)": [[24, "autoqild.detectors.mlp_leakage_detector.MLPLeakageDetector.fit", false]], "fit() (autoqild.detectors.random_forest_leakage_detector.randomforestleakagedetector method)": [[25, "autoqild.detectors.random_forest_leakage_detector.RandomForestLeakageDetector.fit", false]], "fit() (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector method)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.fit", false]], "fit() (autoqild.detectors.tabpfn_leakage_detector.tabpfnleakagedetector method)": [[27, "autoqild.detectors.tabpfn_leakage_detector.TabPFNLeakageDetector.fit", false]], "fit() (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator method)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.fit", false]], "fit() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.fit", false]], "fit() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.fit", false]], "fit() (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator method)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.fit", false]], "fit() (autoqild.mi_estimators.mine_estimator.minemiestimator method)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.fit", false]], "fit() (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse method)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.fit", false]], "fit() (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator method)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.fit", false]], "fit() (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator method)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.fit", false]], "fit_params (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.fit_params", false]], "flip_y (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.flip_y", false]], "flip_y_prob (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.flip_y_prob", false]], "fold_id (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.fold_id", false]], "fold_id (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.fold_id", false]], "fold_id (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.fold_id", false]], "forward() (autoqild.mi_estimators.neural_networks_torch.classnet method)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.forward", false]], "forward() (autoqild.mi_estimators.neural_networks_torch.statnet method)": [[35, "autoqild.mi_estimators.neural_networks_torch.StatNet.forward", false]], "gen_type (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.gen_type", false]], "gen_type (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.gen_type", false]], "gen_types (in module autoqild.dataset_readers.utils)": [[19, "autoqild.dataset_readers.utils.GEN_TYPES", false]], "generate_dataset() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.generate_dataset", false]], "generate_dataset() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.generate_dataset", false]], "generate_samples_for_class() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.generate_samples_for_class", false]], "generate_samples_for_class() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.generate_samples_for_class", false]], "generate_samples_per_class() (in module autoqild.dataset_readers.utils)": [[19, "autoqild.dataset_readers.utils.generate_samples_per_class", false]], "get_bayes_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_bayes_mi", false]], "get_bayes_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_bayes_mi", false]], "get_bayes_predictor_scores() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.get_bayes_predictor_scores", false]], "get_data() (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader method)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.get_data", false]], "get_data() (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader method)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.get_data", false]], "get_k_rank_model() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.get_k_rank_model", false]], "get_mine_loss() (in module autoqild.mi_estimators.pytorch_utils)": [[37, "autoqild.mi_estimators.pytorch_utils.get_mine_loss", false]], "get_model() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.get_model", false]], "get_optimizer_and_parameters() (in module autoqild.mi_estimators.pytorch_utils)": [[37, "autoqild.mi_estimators.pytorch_utils.get_optimizer_and_parameters", false]], "get_parameters_at_k() (in module autoqild.bayes_search.bayes_search_utils)": [[8, "autoqild.bayes_search.bayes_search_utils.get_parameters_at_k", false]], "get_params() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.get_params", false]], "get_params() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.get_params", false]], "get_params() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.get_params", false]], "get_prob_dist_x_given_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_dist_x_given_y", false]], "get_prob_dist_x_given_y() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_dist_x_given_y", false]], "get_prob_flip_y_given_x() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_flip_y_given_x", false]], "get_prob_fn_margx() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_fn_margx", false]], "get_prob_fn_margx() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_fn_margx", false]], "get_prob_x_given_flip_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_x_given_flip_y", false]], "get_prob_x_given_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_x_given_y", false]], "get_prob_x_given_y() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_x_given_y", false]], "get_prob_y_given_x() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_y_given_x", false]], "get_prob_y_given_x() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_y_given_x", false]], "get_sampled_imbalanced_data() (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader method)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.get_sampled_imbalanced_data", false]], "get_sampled_imbalanced_data() (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader method)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.get_sampled_imbalanced_data", false]], "get_scores() (in module autoqild.bayes_search.bayes_search_utils)": [[8, "autoqild.bayes_search.bayes_search_utils.get_scores", false]], "get_weights() (autoqild.classifiers.layers.normalizeddense method)": [[12, "autoqild.classifiers.layers.NormalizedDense.get_weights", false]], "gmmmiestimator (class in autoqild.mi_estimators.gmm_mi_estimator)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator", false]], "hash_value (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.hash_value", false]], "helmann_raviv_function() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.helmann_raviv_function", false]], "helmann_raviv_upper_bound() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.helmann_raviv_upper_bound", false]], "hidden_layers (autoqild.mi_estimators.neural_networks_torch.classnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.hidden_layers", false]], "hidden_layers (autoqild.mi_estimators.neural_networks_torch.statnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.StatNet.hidden_layers", false]], "hp_iters (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.hp_iters", false]], "hyperparameter_optimization() (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector method)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_optimization() (autoqild.detectors.ild_base_class.informationleakagedetector method)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_optimization() (autoqild.detectors.mi_estimator_detector.miestimationleakagedetector method)": [[23, "autoqild.detectors.mi_estimator_detector.MIEstimationLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_optimization() (autoqild.detectors.mlp_leakage_detector.mlpleakagedetector method)": [[24, "autoqild.detectors.mlp_leakage_detector.MLPLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_optimization() (autoqild.detectors.random_forest_leakage_detector.randomforestleakagedetector method)": [[25, "autoqild.detectors.random_forest_leakage_detector.RandomForestLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_optimization() (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector method)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_optimization() (autoqild.detectors.tabpfn_leakage_detector.tabpfnleakagedetector method)": [[27, "autoqild.detectors.tabpfn_leakage_detector.TabPFNLeakageDetector.hyperparameter_optimization", false]], "hyperparameter_tune_kwargs (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.hyperparameter_tune_kwargs", false]], "hyperparameters (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.hyperparameters", false]], "hyperparameters (in module autoqild.automl.model_configurations)": [[4, "autoqild.automl.model_configurations.hyperparameters", false]], "imbalance (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.imbalance", false]], "imbalance (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.imbalance", false]], "imbalance (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.imbalance", false]], "informationleakagedetector (class in autoqild.detectors.ild_base_class)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector", false]], "init() (in module autoqild.mi_estimators.pytorch_utils)": [[37, "autoqild.mi_estimators.pytorch_utils.init", false]], "inner_cv_iterator (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.inner_cv_iterator", false]], "input (autoqild.mi_estimators.neural_networks_torch.classnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.input", false]], "input (autoqild.mi_estimators.neural_networks_torch.statnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.StatNet.input", false]], "is_pc_softmax (autoqild.mi_estimators.neural_networks_torch.classnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.is_pc_softmax", false]], "label_binarizer (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.label_binarizer", false]], "label_col (in module autoqild.dataset_readers.utils)": [[19, "autoqild.dataset_readers.utils.LABEL_COL", false]], "leaderboard (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.leaderboard", false]], "learner (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector attribute)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.learner", false]], "learner_params (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.learner_params", false]], "learner_params (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator attribute)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.learner_params", false]], "learner_params (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator attribute)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.learner_params", false]], "learner_params (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator attribute)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.learner_params", false]], "log_callback() (in module autoqild.bayes_search.bayes_search_utils)": [[8, "autoqild.bayes_search.bayes_search_utils.log_callback", false]], "log_loss_estimation() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.log_loss_estimation", false]], "log_mean_exp() (in module autoqild.mi_estimators.pytorch_utils)": [[37, "autoqild.mi_estimators.pytorch_utils.log_mean_exp", false]], "logger (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.logger", false]], "logger (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.logger", false]], "logger (autoqild.bayes_search.bayes_search_cv.bayessearchcv attribute)": [[7, "autoqild.bayes_search.bayes_search_cv.BayesSearchCV.logger", false]], "logger (autoqild.classifiers.bayes_predictor.bayespredictor attribute)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.logger", false]], "logger (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron attribute)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.logger", false]], "logger (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.logger", false]], "logger (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.logger", false]], "logger (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.logger", false]], "logger (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.logger", false]], "logger (autoqild.detectors.autogluon_leakage_detector.autogluonleakagedetector attribute)": [[21, "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector.logger", false]], "logger (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.logger", false]], "logger (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.logger", false]], "logger (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.logger", false]], "logger (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator attribute)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.logger", false]], "logger (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.logger", false]], "majorityvoting (class in autoqild.classifiers.blind_classifiers)": [[11, "autoqild.classifiers.blind_classifiers.MajorityVoting", false]], "means (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.means", false]], "means (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.means", false]], "mi_val (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse attribute)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.mi_val", false]], "mi_val (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.mi_val", false]], "mi_validation_final (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.mi_validation_final", false]], "mid_point_mi() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.mid_point_mi", false]], "miestimationleakagedetector (class in autoqild.detectors.mi_estimator_detector)": [[23, "autoqild.detectors.mi_estimator_detector.MIEstimationLeakageDetector", false]], "miestimatorbase (class in autoqild.mi_estimators.mi_base_class)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase", false]], "minemiestimator (class in autoqild.mi_estimators.mine_estimator)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator", false]], "minemiestimatormse (class in autoqild.mi_estimators.mine_estimator_mse)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE", false]], "mlpleakagedetector (class in autoqild.detectors.mlp_leakage_detector)": [[24, "autoqild.detectors.mlp_leakage_detector.MLPLeakageDetector", false]], "model (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.model", false]], "model (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.model", false]], "model (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron attribute)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.model", false]], "models (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.models", false]], "module": [[1, "module-autoqild.automl", false], [2, "module-autoqild.automl.autogluon_classifier", false], [3, "module-autoqild.automl.automl_core", false], [4, "module-autoqild.automl.model_configurations", false], [5, "module-autoqild.automl.tabpfn_classifier", false], [6, "module-autoqild.bayes_search", false], [7, "module-autoqild.bayes_search.bayes_search_cv", false], [8, "module-autoqild.bayes_search.bayes_search_utils", false], [9, "module-autoqild.classifiers", false], [10, "module-autoqild.classifiers.bayes_predictor", false], [11, "module-autoqild.classifiers.blind_classifiers", false], [12, "module-autoqild.classifiers.layers", false], [13, "module-autoqild.classifiers.multi_layer_perceptron", false], [14, "module-autoqild.dataset_readers", false], [15, "module-autoqild.dataset_readers.open_ml_padding_dr", false], [16, "module-autoqild.dataset_readers.open_ml_timming_dr", false], [17, "module-autoqild.dataset_readers.synthetic_data_generator", false], [18, "module-autoqild.dataset_readers.synthetic_data_generator_distance", false], [19, "module-autoqild.dataset_readers.utils", false], [20, "module-autoqild.detectors", false], [21, "module-autoqild.detectors.autogluon_leakage_detector", false], [22, "module-autoqild.detectors.ild_base_class", false], [23, "module-autoqild.detectors.mi_estimator_detector", false], [24, "module-autoqild.detectors.mlp_leakage_detector", false], [25, "module-autoqild.detectors.random_forest_leakage_detector", false], [26, "module-autoqild.detectors.sklearn_leakage_detector", false], [27, "module-autoqild.detectors.tabpfn_leakage_detector", false], [28, "module-autoqild.mi_estimators", false], [29, "module-autoqild.mi_estimators.auto_gluon_estimator", false], [30, "module-autoqild.mi_estimators.gmm_mi_estimator", false], [31, "module-autoqild.mi_estimators.mi_base_class", false], [32, "module-autoqild.mi_estimators.mi_estimator_classification", false], [33, "module-autoqild.mi_estimators.mine_estimator", false], [34, "module-autoqild.mi_estimators.mine_estimator_mse", false], [35, "module-autoqild.mi_estimators.neural_networks_torch", false], [36, "module-autoqild.mi_estimators.pc_softmax_estimator", false], [37, "module-autoqild.mi_estimators.pytorch_utils", false], [38, "module-autoqild.mi_estimators.tab_pfn_estimator", false], [39, "module-autoqild.utilities", false], [40, "module-autoqild.utilities.dimensionality_reduction_techniques", false], [41, "module-autoqild.utilities.metrics", false], [42, "module-autoqild.utilities.statistical_tests", false]], "multilayerperceptron (class in autoqild.classifiers.multi_layer_perceptron)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron", false]], "n_classes (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.n_classes", false]], "n_classes (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.n_classes", false]], "n_classes (autoqild.classifiers.bayes_predictor.bayespredictor attribute)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.n_classes", false]], "n_classes (autoqild.classifiers.blind_classifiers.priorclassifier attribute)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier.n_classes", false]], "n_classes (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.n_classes", false]], "n_classes (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.n_classes", false]], "n_ensembles (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.n_ensembles", false]], "n_features (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.n_features", false]], "n_features (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.n_features", false]], "n_features (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.n_features", false]], "n_features (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.n_features", false]], "n_features (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.n_features", false]], "n_features (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.n_features", false]], "n_hypothesis (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.n_hypothesis", false]], "n_inner_folds (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.n_inner_folds", false]], "n_instances (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.n_instances", false]], "n_instances (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.n_instances", false]], "n_jobs (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.n_jobs", false]], "n_models (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.n_models", false]], "n_models (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.n_models", false]], "n_reduced (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.n_reduced", false]], "n_reduced (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.n_reduced", false]], "noise (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.noise", false]], "norm_layer (autoqild.classifiers.layers.normalizeddense attribute)": [[12, "autoqild.classifiers.layers.NormalizedDense.norm_layer", false]], "normalizeddense (class in autoqild.classifiers.layers)": [[12, "autoqild.classifiers.layers.NormalizedDense", false]], "num_comps (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.num_comps", false]], "openmlpaddingdatasetreader (class in autoqild.dataset_readers.open_ml_padding_dr)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader", false]], "openmltimingdatasetreader (class in autoqild.dataset_readers.open_ml_timming_dr)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader", false]], "optimizer (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator attribute)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.optimizer", false]], "optimizer_cls (autoqild.mi_estimators.mine_estimator.minemiestimator attribute)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.optimizer_cls", false]], "optimizer_cls (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse attribute)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.optimizer_cls", false]], "optimizers_file_path (autoqild.bayes_search.bayes_search_cv.bayessearchcv attribute)": [[7, "autoqild.bayes_search.bayes_search_cv.BayesSearchCV.optimizers_file_path", false]], "output (autoqild.mi_estimators.neural_networks_torch.classnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.output", false]], "output (autoqild.mi_estimators.neural_networks_torch.statnet attribute)": [[35, "autoqild.mi_estimators.neural_networks_torch.StatNet.output", false]], "output_folder (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.output_folder", false]], "own_softmax() (in module autoqild.mi_estimators.pytorch_utils)": [[37, "autoqild.mi_estimators.pytorch_utils.own_softmax", false]], "padding_code (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.padding_code", false]], "padding_name (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.padding_name", false]], "paired_ttest() (in module autoqild.utilities.statistical_tests)": [[42, "autoqild.utilities.statistical_tests.paired_ttest", false]], "pc_softmax_estimation() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.pc_softmax_estimation", false]], "pcsoftmaxmiestimator (class in autoqild.mi_estimators.pc_softmax_estimator)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator", false]], "pdf() (in module autoqild.dataset_readers.utils)": [[19, "autoqild.dataset_readers.utils.pdf", false]], "predict() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.predict", false]], "predict() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.predict", false]], "predict() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.predict", false]], "predict() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.predict", false]], "predict() (autoqild.classifiers.blind_classifiers.priorclassifier method)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier.predict", false]], "predict() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.predict", false]], "predict() (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator method)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.predict", false]], "predict() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.predict", false]], "predict() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.predict", false]], "predict() (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator method)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.predict", false]], "predict() (autoqild.mi_estimators.mine_estimator.minemiestimator method)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.predict", false]], "predict() (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse method)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.predict", false]], "predict() (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator method)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.predict", false]], "predict() (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator method)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.predict", false]], "predict_proba() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.predict_proba", false]], "predict_proba() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.predict_proba", false]], "predict_proba() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.predict_proba", false]], "predict_proba() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.predict_proba", false]], "predict_proba() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator method)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator method)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.mine_estimator.minemiestimator method)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse method)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator method)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.predict_proba", false]], "predict_proba() (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator method)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.predict_proba", false]], "priorclassifier (class in autoqild.classifiers.blind_classifiers)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier", false]], "probability_calibration() (in module autoqild.bayes_search.bayes_search_utils)": [[8, "autoqild.bayes_search.bayes_search_utils.probability_calibration", false]], "random_state (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.random_state", false]], "random_state (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.random_state", false]], "random_state (autoqild.classifiers.bayes_predictor.bayespredictor attribute)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.random_state", false]], "random_state (autoqild.classifiers.blind_classifiers.priorclassifier attribute)": [[11, "autoqild.classifiers.blind_classifiers.PriorClassifier.random_state", false]], "random_state (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.random_state", false]], "random_state (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.random_state", false]], "random_state (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.random_state", false]], "random_state (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.random_state", false]], "random_state (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator attribute)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.random_state", false]], "randomclassifier (class in autoqild.classifiers.blind_classifiers)": [[11, "autoqild.classifiers.blind_classifiers.RandomClassifier", false]], "randomforestleakagedetector (class in autoqild.detectors.random_forest_leakage_detector)": [[25, "autoqild.detectors.random_forest_leakage_detector.RandomForestLeakageDetector", false]], "reduce_dataset() (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector method)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.reduce_dataset", false]], "reduced_hyperparameters (in module autoqild.automl.model_configurations)": [[4, "autoqild.automl.model_configurations.reduced_hyperparameters", false]], "reduction_technique (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.reduction_technique", false]], "reduction_technique (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.reduction_technique", false]], "reg_covar (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.reg_covar", false]], "reshape_inputs() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.reshape_inputs", false]], "results (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.results", false]], "results_file (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.results_file", false]], "results_file_backup (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.results_file_backup", false]], "rf_backup_name (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.rf_backup_name", false]], "rf_name (autoqild.detectors.ild_base_class.informationleakagedetector attribute)": [[22, "autoqild.detectors.ild_base_class.InformationLeakageDetector.rf_name", false]], "round (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.round", false]], "sample_weight (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.sample_weight", false]], "samples_per_class (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.samples_per_class", false]], "samples_per_class (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.samples_per_class", false]], "santhi_vardi_upper_bound() (in module autoqild.utilities.metrics)": [[41, "autoqild.utilities.metrics.santhi_vardi_upper_bound", false]], "score() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.score", false]], "score() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.score", false]], "score() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.score", false]], "score() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[10, "autoqild.classifiers.bayes_predictor.BayesPredictor.score", false]], "score() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.score", false]], "score() (autoqild.mi_estimators.auto_gluon_estimator.automigluonestimator method)": [[29, "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator.score", false]], "score() (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator method)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.score", false]], "score() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.score", false]], "score() (autoqild.mi_estimators.mi_estimator_classification.classficationmiestimator method)": [[32, "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator.score", false]], "score() (autoqild.mi_estimators.mine_estimator.minemiestimator method)": [[33, "autoqild.mi_estimators.mine_estimator.MineMIEstimator.score", false]], "score() (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse method)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.score", false]], "score() (autoqild.mi_estimators.neural_networks_torch.classnet method)": [[35, "autoqild.mi_estimators.neural_networks_torch.ClassNet.score", false]], "score() (autoqild.mi_estimators.pc_softmax_estimator.pcsoftmaxmiestimator method)": [[36, "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator.score", false]], "score() (autoqild.mi_estimators.tab_pfn_estimator.tabpfnmiestimator method)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator.score", false]], "scoring_model (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron attribute)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.scoring_model", false]], "search_space (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.search_space", false]], "seeds (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.seeds", false]], "seeds (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.seeds", false]], "selection_model (autoqild.automl.tabpfn_classifier.autotabpfnclassifier attribute)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.selection_model", false]], "selection_model (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.selection_model", false]], "server (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.server", false]], "set_params() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.set_params", false]], "set_params() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[13, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.set_params", false]], "set_params() (autoqild.mi_estimators.mi_base_class.miestimatorbase method)": [[31, "autoqild.mi_estimators.mi_base_class.MIEstimatorBase.set_params", false]], "set_weights() (autoqild.classifiers.layers.normalizeddense method)": [[12, "autoqild.classifiers.layers.NormalizedDense.set_weights", false]], "sklearnleakagedetector (class in autoqild.detectors.sklearn_leakage_detector)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector", false]], "stat_net (autoqild.mi_estimators.mine_estimator_mse.minemiestimatormse attribute)": [[34, "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE.stat_net", false]], "statnet (class in autoqild.mi_estimators.neural_networks_torch)": [[35, "autoqild.mi_estimators.neural_networks_torch.StatNet", false]], "syntheticdatasetgenerator (class in autoqild.dataset_readers.synthetic_data_generator)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator", false]], "syntheticdatasetgeneratordistance (class in autoqild.dataset_readers.synthetic_data_generator_distance)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance", false]], "tabpfn_folder (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.tabpfn_folder", false]], "tabpfnleakagedetector (class in autoqild.detectors.tabpfn_leakage_detector)": [[27, "autoqild.detectors.tabpfn_leakage_detector.TabPFNLeakageDetector", false]], "tabpfnmiestimator (class in autoqild.mi_estimators.tab_pfn_estimator)": [[38, "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator", false]], "time_limit (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.time_limit", false]], "update_params_at_k() (in module autoqild.bayes_search.bayes_search_utils)": [[8, "autoqild.bayes_search.bayes_search_utils.update_params_at_k", false]], "use_hyperparameters (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.use_hyperparameters", false]], "val_size (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.val_size", false]], "validation_loss (autoqild.detectors.sklearn_leakage_detector.sklearnleakagedetector attribute)": [[26, "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector.validation_loss", false]], "verbosity (autoqild.automl.autogluon_classifier.autogluonclassifier attribute)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.verbosity", false]], "vulnerable_classes (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[15, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.vulnerable_classes", false]], "vulnerable_classes (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[16, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.vulnerable_classes", false]], "wilcoxon_signed_rank_test() (in module autoqild.utilities.statistical_tests)": [[42, "autoqild.utilities.statistical_tests.wilcoxon_signed_rank_test", false]], "y_cat (autoqild.mi_estimators.gmm_mi_estimator.gmmmiestimator attribute)": [[30, "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator.y_cat", false]], "y_prob (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator attribute)": [[17, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.y_prob", false]], "y_prob (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance attribute)": [[18, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.y_prob", false]]}, "objects": {"autoqild": [[1, 0, 0, "-", "automl"], [6, 0, 0, "-", "bayes_search"], [9, 0, 0, "-", "classifiers"], [14, 0, 0, "-", "dataset_readers"], [20, 0, 0, "-", "detectors"], [28, 0, 0, "-", "mi_estimators"], [39, 0, 0, "-", "utilities"]], "autoqild.automl": [[2, 0, 0, "-", "autogluon_classifier"], [3, 0, 0, "-", "automl_core"], [4, 0, 0, "-", "model_configurations"], [5, 0, 0, "-", "tabpfn_classifier"]], "autoqild.automl.autogluon_classifier": [[2, 1, 1, "", "AutoGluonClassifier"]], "autoqild.automl.autogluon_classifier.AutoGluonClassifier": [[2, 2, 1, "", "_is_fitted_"], [2, 2, 1, "", "auto_stack"], [2, 2, 1, "", "class_label"], [2, 2, 1, "", "columns"], [2, 3, 1, "", "convert_to_dataframe"], [2, 3, 1, "", "decision_function"], [2, 2, 1, "", "delete_tmp_folder_after_terminate"], [2, 2, 1, "", "eval_metric"], [2, 2, 1, "", "exclude_model_types"], [2, 3, 1, "", "fit"], [2, 3, 1, "", "get_k_rank_model"], [2, 3, 1, "", "get_model"], [2, 2, 1, "", "hyperparameter_tune_kwargs"], [2, 2, 1, "", "hyperparameters"], [2, 2, 1, "", "leaderboard"], [2, 2, 1, "", "logger"], [2, 2, 1, "", "model"], [2, 2, 1, "", "n_classes"], [2, 2, 1, "", "n_features"], [2, 2, 1, "", "output_folder"], [2, 3, 1, "", "predict"], [2, 3, 1, "", "predict_proba"], [2, 2, 1, "", "random_state"], [2, 2, 1, "", "sample_weight"], [2, 3, 1, "", "score"], [2, 2, 1, "", "time_limit"], [2, 2, 1, "", "use_hyperparameters"], [2, 2, 1, "", "verbosity"]], "autoqild.automl.automl_core": [[3, 1, 1, "", "AutomlClassifier"]], "autoqild.automl.automl_core.AutomlClassifier": [[3, 3, 1, "", "decision_function"], [3, 3, 1, "", "fit"], [3, 3, 1, "", "get_params"], [3, 3, 1, "", "predict"], [3, 3, 1, "", "predict_proba"], [3, 3, 1, "", "score"], [3, 3, 1, "", "set_params"]], "autoqild.automl.model_configurations": [[4, 4, 1, "", "hyperparameters"], [4, 4, 1, "", "reduced_hyperparameters"]], "autoqild.automl.tabpfn_classifier": [[5, 1, 1, "", "AutoTabPFNClassifier"]], "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier": [[5, 2, 1, "", "__clear_memory__"], [5, 2, 1, "", "__is_fitted__"], [5, 2, 1, "", "__transform__"], [5, 2, 1, "", "base_path"], [5, 3, 1, "", "decision_function"], [5, 2, 1, "", "device"], [5, 3, 1, "", "fit"], [5, 2, 1, "", "logger"], [5, 2, 1, "", "model"], [5, 2, 1, "", "n_classes"], [5, 2, 1, "", "n_ensembles"], [5, 2, 1, "", "n_features"], [5, 2, 1, "", "n_reduced"], [5, 3, 1, "", "predict"], [5, 3, 1, "", "predict_proba"], [5, 2, 1, "", "random_state"], [5, 2, 1, "", "reduction_technique"], [5, 3, 1, "", "score"], [5, 2, 1, "", "selection_model"]], "autoqild.bayes_search": [[7, 0, 0, "-", "bayes_search_cv"], [8, 0, 0, "-", "bayes_search_utils"]], "autoqild.bayes_search.bayes_search_cv": [[7, 1, 1, "", "BayesSearchCV"]], "autoqild.bayes_search.bayes_search_cv.BayesSearchCV": [[7, 2, 1, "", "logger"], [7, 2, 1, "", "optimizers_file_path"]], "autoqild.bayes_search.bayes_search_utils": [[8, 5, 1, "", "convert_value"], [8, 5, 1, "", "get_parameters_at_k"], [8, 5, 1, "", "get_scores"], [8, 5, 1, "", "log_callback"], [8, 5, 1, "", "probability_calibration"], [8, 5, 1, "", "update_params_at_k"]], "autoqild.classifiers": [[10, 0, 0, "-", "bayes_predictor"], [11, 0, 0, "-", "blind_classifiers"], [12, 0, 0, "-", "layers"], [13, 0, 0, "-", "multi_layer_perceptron"]], "autoqild.classifiers.bayes_predictor": [[10, 1, 1, "", "BayesPredictor"]], "autoqild.classifiers.bayes_predictor.BayesPredictor": [[10, 2, 1, "", "dataset_obj"], [10, 3, 1, "", "decision_function"], [10, 3, 1, "", "fit"], [10, 3, 1, "", "get_bayes_predictor_scores"], [10, 2, 1, "", "logger"], [10, 2, 1, "", "n_classes"], [10, 3, 1, "", "predict"], [10, 3, 1, "", "predict_proba"], [10, 2, 1, "", "random_state"], [10, 3, 1, "", "score"]], "autoqild.classifiers.blind_classifiers": [[11, 1, 1, "", "MajorityVoting"], [11, 1, 1, "", "PriorClassifier"], [11, 1, 1, "", "RandomClassifier"]], "autoqild.classifiers.blind_classifiers.PriorClassifier": [[11, 2, 1, "", "class_probabilities"], [11, 2, 1, "", "classes_"], [11, 3, 1, "", "fit"], [11, 2, 1, "", "n_classes"], [11, 3, 1, "", "predict"], [11, 2, 1, "", "random_state"]], "autoqild.classifiers.layers": [[12, 1, 1, "", "NormalizedDense"]], "autoqild.classifiers.layers.NormalizedDense": [[12, 3, 1, "", "__call__"], [12, 2, 1, "", "activation"], [12, 2, 1, "", "batchnorm"], [12, 2, 1, "", "dense"], [12, 3, 1, "", "get_weights"], [12, 2, 1, "", "norm_layer"], [12, 3, 1, "", "set_weights"]], "autoqild.classifiers.multi_layer_perceptron": [[13, 1, 1, "", "MultiLayerPerceptron"]], "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron": [[13, 2, 1, "", "_construct_layers"], [13, 2, 1, "", "_construct_model_"], [13, 3, 1, "", "decision_function"], [13, 3, 1, "", "fit"], [13, 3, 1, "", "get_params"], [13, 2, 1, "", "logger"], [13, 2, 1, "", "model"], [13, 3, 1, "", "predict"], [13, 3, 1, "", "predict_proba"], [13, 3, 1, "", "reshape_inputs"], [13, 3, 1, "", "score"], [13, 2, 1, "", "scoring_model"], [13, 3, 1, "", "set_params"]], "autoqild.dataset_readers": [[15, 0, 0, "-", "open_ml_padding_dr"], [16, 0, 0, "-", "open_ml_timming_dr"], [17, 0, 0, "-", "synthetic_data_generator"], [18, 0, 0, "-", "synthetic_data_generator_distance"], [19, 0, 0, "-", "utils"]], "autoqild.dataset_readers.open_ml_padding_dr": [[15, 1, 1, "", "OpenMLPaddingDatasetReader"]], "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader": [[15, 2, 1, "", "__clean_up_dataset__"], [15, 2, 1, "", "__create_leakage_datasets__"], [15, 2, 1, "", "__read_dataset__"], [15, 2, 1, "", "attribute_names"], [15, 2, 1, "", "correct_class"], [15, 2, 1, "", "data_frame_raw"], [15, 2, 1, "", "dataset"], [15, 2, 1, "", "dataset_dictionary"], [15, 3, 1, "", "get_data"], [15, 3, 1, "", "get_sampled_imbalanced_data"], [15, 2, 1, "", "logger"], [15, 2, 1, "", "n_features"], [15, 2, 1, "", "server"], [15, 2, 1, "", "vulnerable_classes"]], "autoqild.dataset_readers.open_ml_timming_dr": [[16, 1, 1, "", "OpenMLTimingDatasetReader"]], "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader": [[16, 2, 1, "", "__clean_up_dataset__"], [16, 2, 1, "", "__create_leakage_datasets__"], [16, 2, 1, "", "__read_dataset__"], [16, 2, 1, "", "correct_class"], [16, 2, 1, "", "dataset_dictionary"], [16, 2, 1, "", "dataset_id"], [16, 2, 1, "", "delay"], [16, 2, 1, "", "fold_id"], [16, 3, 1, "", "get_data"], [16, 3, 1, "", "get_sampled_imbalanced_data"], [16, 2, 1, "", "imbalance"], [16, 2, 1, "", "logger"], [16, 2, 1, "", "n_features"], [16, 2, 1, "", "random_state"], [16, 2, 1, "", "vulnerable_classes"]], "autoqild.dataset_readers.synthetic_data_generator": [[17, 1, 1, "", "SyntheticDatasetGenerator"]], "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator": [[17, 2, 1, "", "__generate_cov_means__"], [17, 3, 1, "", "bayes_predictor_mi"], [17, 3, 1, "", "bayes_predictor_pc_softmax_mi"], [17, 3, 1, "", "calculate_mi"], [17, 2, 1, "", "class_labels"], [17, 2, 1, "", "covariances"], [17, 2, 1, "", "ent_y"], [17, 3, 1, "", "entropy_y"], [17, 2, 1, "", "flip_y"], [17, 2, 1, "", "flip_y_prob"], [17, 2, 1, "", "fold_id"], [17, 2, 1, "", "gen_type"], [17, 3, 1, "", "generate_dataset"], [17, 3, 1, "", "generate_samples_for_class"], [17, 3, 1, "", "get_bayes_mi"], [17, 3, 1, "", "get_prob_dist_x_given_y"], [17, 3, 1, "", "get_prob_flip_y_given_x"], [17, 3, 1, "", "get_prob_fn_margx"], [17, 3, 1, "", "get_prob_x_given_flip_y"], [17, 3, 1, "", "get_prob_x_given_y"], [17, 3, 1, "", "get_prob_y_given_x"], [17, 2, 1, "", "imbalance"], [17, 2, 1, "", "logger"], [17, 2, 1, "", "means"], [17, 2, 1, "", "n_classes"], [17, 2, 1, "", "n_features"], [17, 2, 1, "", "n_instances"], [17, 2, 1, "", "random_state"], [17, 2, 1, "", "samples_per_class"], [17, 2, 1, "", "seeds"], [17, 2, 1, "", "y_prob"]], "autoqild.dataset_readers.synthetic_data_generator_distance": [[18, 1, 1, "", "SyntheticDatasetGeneratorDistance"]], "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance": [[18, 2, 1, "", "__generate_cov_means__"], [18, 3, 1, "", "bayes_predictor_mi"], [18, 3, 1, "", "bayes_predictor_pc_softmax_mi"], [18, 3, 1, "", "calculate_mi"], [18, 2, 1, "", "class_labels"], [18, 2, 1, "", "covariances"], [18, 3, 1, "", "entropy_y"], [18, 2, 1, "", "fold_id"], [18, 2, 1, "", "gen_type"], [18, 3, 1, "", "generate_dataset"], [18, 3, 1, "", "generate_samples_for_class"], [18, 3, 1, "", "get_bayes_mi"], [18, 3, 1, "", "get_prob_dist_x_given_y"], [18, 3, 1, "", "get_prob_fn_margx"], [18, 3, 1, "", "get_prob_x_given_y"], [18, 3, 1, "", "get_prob_y_given_x"], [18, 2, 1, "", "imbalance"], [18, 2, 1, "", "logger"], [18, 2, 1, "", "means"], [18, 2, 1, "", "n_classes"], [18, 2, 1, "", "n_features"], [18, 2, 1, "", "n_instances"], [18, 2, 1, "", "noise"], [18, 2, 1, "", "random_state"], [18, 2, 1, "", "samples_per_class"], [18, 2, 1, "", "seeds"], [18, 2, 1, "", "y_prob"]], "autoqild.dataset_readers.utils": [[19, 4, 1, "", "FACTOR"], [19, 4, 1, "", "GEN_TYPES"], [19, 4, 1, "", "LABEL_COL"], [19, 5, 1, "", "clean_class_label"], [19, 5, 1, "", "generate_samples_per_class"], [19, 5, 1, "", "pdf"]], "autoqild.detectors": [[21, 0, 0, "-", "autogluon_leakage_detector"], [22, 0, 0, "-", "ild_base_class"], [23, 0, 0, "-", "mi_estimator_detector"], [24, 0, 0, "-", "mlp_leakage_detector"], [25, 0, 0, "-", "random_forest_leakage_detector"], [26, 0, 0, "-", "sklearn_leakage_detector"], [27, 0, 0, "-", "tabpfn_leakage_detector"]], "autoqild.detectors.autogluon_leakage_detector": [[21, 1, 1, "", "AutoGluonLeakageDetector"]], "autoqild.detectors.autogluon_leakage_detector.AutoGluonLeakageDetector": [[21, 2, 1, "", "base_detector"], [21, 3, 1, "", "detect"], [21, 3, 1, "", "evaluate_scores"], [21, 3, 1, "", "fit"], [21, 3, 1, "", "hyperparameter_optimization"], [21, 2, 1, "", "learner"], [21, 2, 1, "", "logger"]], "autoqild.detectors.ild_base_class": [[22, 1, 1, "", "InformationLeakageDetector"]], "autoqild.detectors.ild_base_class.InformationLeakageDetector": [[22, 2, 1, "", "__allkeys__"], [22, 2, 1, "", "__calculate_majority_voting_accuracy__"], [22, 2, 1, "", "__calculate_random_classifier_accuracy__"], [22, 2, 1, "", "__close_backup_file__"], [22, 2, 1, "", "__close_file__"], [22, 2, 1, "", "__create_results_from_backup__"], [22, 2, 1, "", "__format_name__"], [22, 2, 1, "", "__get_training_dataset__"], [22, 2, 1, "", "__init_results_files__"], [22, 2, 1, "", "__initialize_objects__"], [22, 2, 1, "", "__read_majority_accuracies__"], [22, 2, 1, "", "__read_random_accuracies__"], [22, 2, 1, "", "__read_results_file__"], [22, 2, 1, "", "__store_results__"], [22, 2, 1, "", "__update_backup_file__"], [22, 2, 1, "", "_is_fitted_"], [22, 2, 1, "", "base_detector"], [22, 2, 1, "", "base_directory"], [22, 2, 1, "", "cv_iterations"], [22, 2, 1, "", "cv_iterator"], [22, 3, 1, "", "detect"], [22, 2, 1, "", "detection_method"], [22, 2, 1, "", "estimators"], [22, 3, 1, "", "evaluate_scores"], [22, 3, 1, "", "fit"], [22, 2, 1, "", "fit_params"], [22, 2, 1, "", "hash_value"], [22, 3, 1, "", "hyperparameter_optimization"], [22, 2, 1, "", "learner_params"], [22, 2, 1, "", "logger"], [22, 2, 1, "", "n_hypothesis"], [22, 2, 1, "", "padding_code"], [22, 2, 1, "", "padding_name"], [22, 2, 1, "", "random_state"], [22, 2, 1, "", "results"], [22, 2, 1, "", "results_file"], [22, 2, 1, "", "results_file_backup"], [22, 2, 1, "", "rf_backup_name"], [22, 2, 1, "", "rf_name"]], "autoqild.detectors.mi_estimator_detector": [[23, 1, 1, "", "MIEstimationLeakageDetector"]], "autoqild.detectors.mi_estimator_detector.MIEstimationLeakageDetector": [[23, 3, 1, "", "detect"], [23, 3, 1, "", "fit"], [23, 3, 1, "", "hyperparameter_optimization"]], "autoqild.detectors.mlp_leakage_detector": [[24, 1, 1, "", "MLPLeakageDetector"]], "autoqild.detectors.mlp_leakage_detector.MLPLeakageDetector": [[24, 3, 1, "", "detect"], [24, 3, 1, "", "evaluate_scores"], [24, 3, 1, "", "fit"], [24, 3, 1, "", "hyperparameter_optimization"]], "autoqild.detectors.random_forest_leakage_detector": [[25, 1, 1, "", "RandomForestLeakageDetector"]], "autoqild.detectors.random_forest_leakage_detector.RandomForestLeakageDetector": [[25, 3, 1, "", "detect"], [25, 3, 1, "", "evaluate_scores"], [25, 3, 1, "", "fit"], [25, 3, 1, "", "hyperparameter_optimization"]], "autoqild.detectors.sklearn_leakage_detector": [[26, 1, 1, "", "SklearnLeakageDetector"]], "autoqild.detectors.sklearn_leakage_detector.SklearnLeakageDetector": [[26, 3, 1, "", "detect"], [26, 3, 1, "", "evaluate_scores"], [26, 3, 1, "", "fit"], [26, 2, 1, "", "hp_iters"], [26, 3, 1, "", "hyperparameter_optimization"], [26, 2, 1, "", "inner_cv_iterator"], [26, 2, 1, "", "logger"], [26, 2, 1, "", "n_inner_folds"], [26, 2, 1, "", "n_jobs"], [26, 3, 1, "", "reduce_dataset"], [26, 2, 1, "", "search_space"], [26, 2, 1, "", "tabpfn_folder"], [26, 2, 1, "", "validation_loss"]], "autoqild.detectors.tabpfn_leakage_detector": [[27, 1, 1, "", "TabPFNLeakageDetector"]], "autoqild.detectors.tabpfn_leakage_detector.TabPFNLeakageDetector": [[27, 3, 1, "", "detect"], [27, 3, 1, "", "evaluate_scores"], [27, 3, 1, "", "fit"], [27, 3, 1, "", "hyperparameter_optimization"]], "autoqild.mi_estimators": [[29, 0, 0, "-", "auto_gluon_estimator"], [30, 0, 0, "-", "gmm_mi_estimator"], [31, 0, 0, "-", "mi_base_class"], [32, 0, 0, "-", "mi_estimator_classification"], [33, 0, 0, "-", "mine_estimator"], [34, 0, 0, "-", "mine_estimator_mse"], [35, 0, 0, "-", "neural_networks_torch"], [36, 0, 0, "-", "pc_softmax_estimator"], [37, 0, 0, "-", "pytorch_utils"], [38, 0, 0, "-", "tab_pfn_estimator"]], "autoqild.mi_estimators.auto_gluon_estimator": [[29, 1, 1, "", "AutoMIGluonEstimator"]], "autoqild.mi_estimators.auto_gluon_estimator.AutoMIGluonEstimator": [[29, 2, 1, "", "base_estimator"], [29, 2, 1, "", "base_learner"], [29, 3, 1, "", "decision_function"], [29, 3, 1, "", "estimate_mi"], [29, 3, 1, "", "fit"], [29, 2, 1, "", "learner_params"], [29, 3, 1, "", "predict"], [29, 3, 1, "", "predict_proba"], [29, 3, 1, "", "score"]], "autoqild.mi_estimators.gmm_mi_estimator": [[30, 1, 1, "", "GMMMIEstimator"]], "autoqild.mi_estimators.gmm_mi_estimator.GMMMIEstimator": [[30, 2, 1, "", "__get_goodnessof_fit__"], [30, 2, 1, "", "__is_fitted__"], [30, 2, 1, "", "__transform__"], [30, 2, 1, "", "best_aic"], [30, 2, 1, "", "best_bic"], [30, 2, 1, "", "best_gmm_model"], [30, 2, 1, "", "best_likelihood"], [30, 2, 1, "", "best_mi"], [30, 2, 1, "", "best_model"], [30, 2, 1, "", "best_seed"], [30, 2, 1, "", "cls_model"], [30, 2, 1, "", "covariance_type"], [30, 3, 1, "", "create_classification_model"], [30, 3, 1, "", "decision_function"], [30, 3, 1, "", "estimate_mi"], [30, 3, 1, "", "fit"], [30, 2, 1, "", "logger"], [30, 2, 1, "", "n_models"], [30, 2, 1, "", "n_reduced"], [30, 2, 1, "", "num_comps"], [30, 3, 1, "", "predict"], [30, 3, 1, "", "predict_proba"], [30, 2, 1, "", "reduction_technique"], [30, 2, 1, "", "reg_covar"], [30, 2, 1, "", "round"], [30, 3, 1, "", "score"], [30, 2, 1, "", "selection_model"], [30, 2, 1, "", "val_size"], [30, 2, 1, "", "y_cat"]], "autoqild.mi_estimators.mi_base_class": [[31, 1, 1, "", "MIEstimatorBase"]], "autoqild.mi_estimators.mi_base_class.MIEstimatorBase": [[31, 3, 1, "", "decision_function"], [31, 3, 1, "", "estimate_mi"], [31, 3, 1, "", "fit"], [31, 3, 1, "", "get_params"], [31, 3, 1, "", "predict"], [31, 3, 1, "", "predict_proba"], [31, 3, 1, "", "score"], [31, 3, 1, "", "set_params"]], "autoqild.mi_estimators.mi_estimator_classification": [[32, 1, 1, "", "ClassficationMIEstimator"]], "autoqild.mi_estimators.mi_estimator_classification.ClassficationMIEstimator": [[32, 2, 1, "", "base_estimator"], [32, 2, 1, "", "base_learner"], [32, 3, 1, "", "decision_function"], [32, 3, 1, "", "estimate_mi"], [32, 3, 1, "", "fit"], [32, 2, 1, "", "learner_params"], [32, 2, 1, "", "logger"], [32, 3, 1, "", "predict"], [32, 3, 1, "", "predict_proba"], [32, 2, 1, "", "random_state"], [32, 3, 1, "", "score"]], "autoqild.mi_estimators.mine_estimator": [[33, 1, 1, "", "MineMIEstimator"]], "autoqild.mi_estimators.mine_estimator.MineMIEstimator": [[33, 3, 1, "", "decision_function"], [33, 2, 1, "", "device"], [33, 3, 1, "", "estimate_mi"], [33, 2, 1, "", "final_loss"], [33, 3, 1, "", "fit"], [33, 2, 1, "", "label_binarizer"], [33, 2, 1, "", "mi_validation_final"], [33, 2, 1, "", "models"], [33, 2, 1, "", "n_models"], [33, 2, 1, "", "optimizer_cls"], [33, 3, 1, "", "predict"], [33, 3, 1, "", "predict_proba"], [33, 3, 1, "", "score"]], "autoqild.mi_estimators.mine_estimator_mse": [[34, 1, 1, "", "MineMIEstimatorMSE"]], "autoqild.mi_estimators.mine_estimator_mse.MineMIEstimatorMSE": [[34, 2, 1, "", "__pytorch_tensor_dataset__"], [34, 3, 1, "", "decision_function"], [34, 2, 1, "", "device"], [34, 3, 1, "", "estimate_mi"], [34, 2, 1, "", "final_loss"], [34, 3, 1, "", "fit"], [34, 2, 1, "", "mi_val"], [34, 2, 1, "", "optimizer_cls"], [34, 3, 1, "", "predict"], [34, 3, 1, "", "predict_proba"], [34, 3, 1, "", "score"], [34, 2, 1, "", "stat_net"]], "autoqild.mi_estimators.neural_networks_torch": [[35, 1, 1, "", "ClassNet"], [35, 1, 1, "", "StatNet"]], "autoqild.mi_estimators.neural_networks_torch.ClassNet": [[35, 2, 1, "", "device"], [35, 3, 1, "", "forward"], [35, 2, 1, "", "hidden_layers"], [35, 2, 1, "", "input"], [35, 2, 1, "", "is_pc_softmax"], [35, 2, 1, "", "output"], [35, 3, 1, "", "score"]], "autoqild.mi_estimators.neural_networks_torch.StatNet": [[35, 3, 1, "", "forward"], [35, 2, 1, "", "hidden_layers"], [35, 2, 1, "", "input"], [35, 2, 1, "", "output"]], "autoqild.mi_estimators.pc_softmax_estimator": [[36, 1, 1, "", "PCSoftmaxMIEstimator"]], "autoqild.mi_estimators.pc_softmax_estimator.PCSoftmaxMIEstimator": [[36, 2, 1, "", "class_net"], [36, 2, 1, "", "dataset_properties"], [36, 3, 1, "", "decision_function"], [36, 2, 1, "", "device"], [36, 3, 1, "", "estimate_mi"], [36, 2, 1, "", "final_loss"], [36, 3, 1, "", "fit"], [36, 2, 1, "", "logger"], [36, 2, 1, "", "mi_val"], [36, 2, 1, "", "optimizer"], [36, 3, 1, "", "predict"], [36, 3, 1, "", "predict_proba"], [36, 3, 1, "", "score"]], "autoqild.mi_estimators.pytorch_utils": [[37, 5, 1, "", "get_mine_loss"], [37, 5, 1, "", "get_optimizer_and_parameters"], [37, 5, 1, "", "init"], [37, 5, 1, "", "log_mean_exp"], [37, 5, 1, "", "own_softmax"]], "autoqild.mi_estimators.tab_pfn_estimator": [[38, 1, 1, "", "TabPFNMIEstimator"]], "autoqild.mi_estimators.tab_pfn_estimator.TabPFNMIEstimator": [[38, 2, 1, "", "base_estimator"], [38, 2, 1, "", "base_learner"], [38, 3, 1, "", "decision_function"], [38, 3, 1, "", "estimate_mi"], [38, 3, 1, "", "fit"], [38, 2, 1, "", "learner_params"], [38, 3, 1, "", "predict"], [38, 3, 1, "", "predict_proba"], [38, 3, 1, "", "score"]], "autoqild.utilities": [[40, 0, 0, "-", "dimensionality_reduction_techniques"], [41, 0, 0, "-", "metrics"], [42, 0, 0, "-", "statistical_tests"]], "autoqild.utilities.dimensionality_reduction_techniques": [[40, 5, 1, "", "create_dimensionality_reduction_model"]], "autoqild.utilities.metrics": [[41, 5, 1, "", "auc_score"], [41, 5, 1, "", "bin_ce"], [41, 5, 1, "", "false_negative_rate"], [41, 5, 1, "", "false_positive_rate"], [41, 5, 1, "", "fanos_adjusted_lower_bound"], [41, 5, 1, "", "fanos_lower_bound"], [41, 5, 1, "", "helmann_raviv_function"], [41, 5, 1, "", "helmann_raviv_upper_bound"], [41, 5, 1, "", "log_loss_estimation"], [41, 5, 1, "", "mid_point_mi"], [41, 5, 1, "", "pc_softmax_estimation"], [41, 5, 1, "", "santhi_vardi_upper_bound"]], "autoqild.utilities.statistical_tests": [[42, 5, 1, "", "paired_ttest"], [42, 5, 1, "", "wilcoxon_signed_rank_test"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "attribute", "Python attribute"], "3": ["py", "method", "Python method"], "4": ["py", "data", "Python data"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:attribute", "3": "py:method", "4": "py:data", "5": "py:function"}, "terms": {"": [3, 13, 17, 18, 21, 22, 23, 24, 25, 26, 27, 30, 31, 36, 41], "0": [2, 3, 4, 5, 7, 8, 10, 13, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 36, 38, 41, 45], "0001": [13, 33, 34], "001": [13, 36], "01": 4, "05": [4, 19], "06": [4, 30], "1": [4, 7, 13, 15, 16, 17, 18, 19, 35, 36, 41, 45], "10": [4, 13, 33, 34, 36, 44, 45], "100": [5, 13, 30, 34, 35, 36, 38], "1000": [19, 33], "10000": 34, "100000": 33, "128": 34, "1751928845077875": 45, "1800": [2, 29], "1e": [4, 13, 30, 33, 34], "2": [4, 7, 17, 18, 34, 45], "20": [4, 5, 30, 38, 40], "200": 45, "256": 4, "3": [4, 30, 33, 34, 44, 45], "30": 30, "300": 4, "3193094645863748": 45, "32": [5, 13], "4": [4, 13, 33, 34, 45], "42": [17, 18, 30, 32, 33, 34, 36, 45], "5": [4, 19, 44, 45], "50": [4, 5, 7, 13, 36], "500": [17, 18], "5000": 4, "584961043823006": 45, "6": [2, 4, 29, 30], "600": 45, "8": 4, "9": 44, "95": 4, "A": [7, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 38, 40], "By": [33, 43], "For": [3, 41], "If": [2, 3, 5, 7, 8, 12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 31, 35, 36, 37, 40, 41, 42], "It": [2, 3, 5, 10, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 32, 35, 38, 39], "OR": 44, "The": [1, 2, 3, 5, 6, 7, 8, 10, 11, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 36, 37, 38, 39, 40, 41, 42], "There": 45, "These": [1, 4, 28], "To": 3, "With": 43, "__": [3, 13, 31], "__allkeys__": 22, "__calculate_majority_voting_accuracy__": 22, "__calculate_random_classifier_accuracy__": 22, "__call__": 12, "__clean_up_dataset__": [15, 16], "__clear_memory__": 5, "__close_backup_file__": 22, "__close_file__": 22, "__create_leakage_datasets__": [15, 16], "__create_results_from_backup__": 22, "__format_name__": 22, "__generate_cov_means__": [17, 18], "__get_goodnessof_fit__": 30, "__get_training_dataset__": 22, "__init_results_files__": 22, "__initialize_objects__": 22, "__is_fitted__": [5, 30], "__pytorch_tensor_dataset__": [33, 34], "__read_dataset__": [15, 16], "__read_majority_accuracies__": 22, "__read_random_accuracies__": 22, "__read_results_file__": 22, "__store_results__": 22, "__transform__": [5, 30], "__update_backup_file__": 22, "_constant": 39, "_construct_lay": 13, "_construct_model_": 13, "_is_fitted_": [2, 22], "_j": [17, 18, 36], "_multivari": [17, 18, 19], "_run_search": 7, "_step": 7, "abil": 25, "about": 2, "abov": 44, "abstract": [3, 22], "acc": [5, 13], "access": 22, "accord": [11, 21], "account": [23, 24, 25, 26, 27, 36, 37, 41], "accur": [33, 43], "accuraci": [2, 3, 5, 10, 13, 21, 22, 24, 25, 26, 29, 31, 32, 38, 42, 45], "accuracies2": 42, "accuracy_scor": [3, 10, 45], "achiev": [10, 30, 33], "across": [7, 19, 21, 22, 23, 24, 25, 26, 27, 33, 37], "activ": [12, 13, 44], "actual": 10, "ad": [30, 41], "adadelta": [33, 34, 36, 37], "adagrad": [33, 34, 36, 37], "adam": [13, 33, 34, 36, 37], "adamax": [33, 34, 36, 37], "adamw": [33, 34, 36, 37], "adapt": [33, 34, 36, 37], "addit": [2, 3, 5, 6, 7, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 42], "additon": 9, "address": 43, "adjust": [17, 18, 33, 34, 36, 37, 41], "advanc": [38, 43], "affect": 18, "after": [2, 3, 5, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 34, 35, 36, 37], "against": 22, "aggreg": 33, "aggress": [33, 34, 36, 37], "aic": 30, "akaik": 30, "algorithm": [22, 33, 34, 36, 37], "all": [17, 18, 19, 22, 30, 31, 33, 37], "allow": [2, 5, 7, 17, 18, 19, 22, 29, 33], "along": 10, "alreadi": [2, 22, 23, 24, 25, 26, 45], "also": [9, 22, 23, 24, 25, 26], "altern": 42, "alwai": 11, "amount": 45, "an": [2, 3, 5, 7, 8, 10, 15, 16, 17, 18, 22, 23, 24, 25, 26, 33, 34, 36, 37, 41], "analysi": [5, 16, 21, 22, 23, 24, 25, 26, 30, 38, 39, 40, 43], "analyz": [15, 24, 26], "ani": [3, 7, 10, 19, 21, 22, 23, 24, 25, 26, 27], "api": [15, 16], "appli": [12, 13, 15, 16, 17, 18, 19, 22, 23, 24, 25, 26, 27, 35, 37, 38, 42], "applic": [21, 22, 23, 24, 25, 26], "approach": [24, 33, 41, 43], "appropri": 8, "ar": [3, 4, 5, 7, 11, 13, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 30, 31, 33, 37, 38, 41], "architectur": [33, 34], "arg": 12, "argument": [2, 3, 5, 7, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38], "aris": 41, "around": 11, "arrai": [2, 3, 5, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 38], "art": [1, 43], "aspect": 2, "assess": [2, 21, 29, 36], "assign": 7, "associ": [15, 16, 33], "assum": [17, 18], "attack": [15, 16], "attempt": 23, "attribut": [4, 7, 15, 19], "attribute_nam": 15, "auc": 41, "auc_roc": 41, "auc_scor": 41, "auto_stack": [2, 29], "auto_weight": 2, "autogluon": [1, 2, 4, 21, 29], "autogluonclassifi": [2, 21, 29], "autogluonleakagedetector": 21, "autom": [1, 29], "automat": [2, 5, 19, 29], "automigluonestim": 29, "automl": [29, 38, 43, 45], "automlclassifi": [2, 3, 5], "automlquantildetect": [43, 44, 45], "autoqild": [0, 44, 45], "autotabpfnclassifi": [5, 38], "avail": [5, 13, 22], "averag": [7, 33, 41], "backup": [21, 22, 23, 24, 25, 26, 27], "bagging_fract": 4, "balanc": [2, 4, 5, 13], "balanced_subsampl": 4, "base": [2, 3, 5, 7, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41], "base_detector": [21, 22], "base_directori": [21, 22, 23, 24, 25, 26, 27], "base_estim": [29, 32, 38], "base_learn": [29, 32, 38], "base_path": [5, 38], "baseestim": [3, 10, 13, 31], "baselin": [11, 22], "basic": 32, "batch": [12, 13, 34], "batch_norm": 13, "batch_siz": [5, 13, 34], "batchnorm": 12, "bay": [9, 10, 17, 18], "bayes_predictor_mi": [17, 18], "bayes_predictor_pc_softmax_mi": [17, 18], "bayes_search": 43, "bayesian": [5, 6, 7, 8, 21, 22, 23, 24, 25, 26, 27, 30], "bayespredictor": 10, "bayessearchcv": [7, 8], "been": [22, 23, 24, 25, 26], "befor": [12, 41], "behavior": 26, "being": [21, 22, 23, 24, 25, 26], "belong": [15, 16], "below": [3, 17, 18], "best": [7, 8, 10, 21, 22, 23, 24, 25, 26, 30, 34], "best_aic": 30, "best_bic": 30, "best_gmm_model": 30, "best_likelihood": 30, "best_loss": 8, "best_mi": 30, "best_model": 30, "best_param": 8, "best_se": 30, "beta": [22, 29, 32, 38], "better": [33, 34, 36, 37], "between": [15, 16, 17, 18, 28, 32, 33, 34, 36, 41], "bias": 37, "bic": 30, "bin": [22, 29, 32, 38], "bin_c": 41, "binari": [10, 19, 41], "binary_cross_entropi": 41, "bleichenbach": [15, 16], "blind": [9, 42], "bonferroni": [22, 23, 24, 25, 26, 27], "bool": [2, 3, 5, 12, 13, 15, 16, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 42], "boolean": 7, "boost": [2, 29], "both": [5, 14, 17, 18, 19, 38], "bound": 41, "boundari": 3, "build": [2, 5, 13, 30, 38, 40], "built": [22, 26], "calcul": [3, 11, 17, 18, 19, 22, 23, 24, 25, 26, 30, 37, 41, 45], "calculate_mi": [17, 18, 45], "calibr": [8, 22, 24, 25, 26, 29, 32, 38], "call": 5, "callabl": [7, 8], "callback": [6, 8, 13], "can": [3, 5, 17, 18, 22, 36, 37, 41, 43, 45], "cannot": 3, "capabl": [22, 38], "capit": 19, "case": [7, 30, 33, 37, 41], "cat": [2, 4, 29], "categor": [4, 13, 15, 16, 30], "categorical_crossentropi": 13, "cd": 44, "cdot": [17, 18, 36, 41], "certain": 17, "challeng": 43, "channel": [15, 16], "check": [2, 22, 23, 24, 25, 26], "choic": 38, "class": [2, 3, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41], "class_label": [2, 15, 16, 17, 18], "class_label_exampl": 19, "class_net": 36, "class_prob": 11, "class_weight": 4, "classes_": 11, "classficationmiestim": [29, 32, 38, 45], "classif": [2, 5, 10, 11, 13, 29, 30, 32, 33, 34, 35, 36, 38, 41, 43], "classifi": [1, 3, 8, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 38, 42, 43], "classifiermixin": [3, 10, 13, 31], "classnet": [35, 36], "clean": [15, 16, 19], "clean_class_label": 19, "clear": 5, "clf": 3, "clone": 44, "close": 22, "cls_enc": 35, "cls_model": 30, "cluster": 30, "code": [15, 22, 45], "coincid": [3, 29, 32], "column": [2, 15, 16, 19], "com": 44, "combin": [7, 33, 34, 36, 37], "commonli": 4, "compar": [3, 22, 41, 45], "comparison": [23, 24, 25, 26], "compat": 23, "compil": 13, "complet": [2, 29], "complex": [13, 25, 33, 41], "compon": [3, 5, 13, 30, 31, 38, 40], "comprehens": 43, "comput": [2, 5, 10, 13, 17, 18, 19, 21, 22, 24, 25, 26, 30, 33, 34, 35, 36, 37, 41], "conda": 44, "condit": [10, 17, 18, 41], "confid": [3, 29, 30, 31, 32, 33, 38, 43], "configur": [1, 4, 5, 7, 22, 23, 24, 25, 26, 29, 33, 35, 37, 38], "confus": [21, 22, 24, 25, 26], "coninccid": 31, "connect": 35, "consid": [30, 41], "consist": [19, 21, 22, 23, 24, 25, 26, 27], "constant": [9, 11, 19, 39, 45], "constrain": 41, "construct": 13, "constructor": [29, 38], "contain": [2, 3, 6, 9, 12, 13, 15, 17, 18, 31, 41], "content": 36, "control": [7, 17, 18, 21, 22, 23, 24, 25, 26, 27], "converg": [33, 34, 36, 37], "convert": [2, 8, 15, 16], "convert_to_datafram": 2, "convert_valu": 8, "core": 22, "correct": [15, 16, 22, 23, 24, 25, 26, 27, 36, 42], "correct_class": [15, 16], "correctli": [15, 16], "correspond": [17, 18, 21, 22, 23, 24, 25, 26, 37, 40], "count": [17, 18, 30, 36], "covari": [17, 18, 30], "covariance_typ": 30, "cpu": [5, 33, 34, 35, 36, 37], "creat": [3, 15, 16, 17, 18, 19, 22, 30, 33, 34, 40, 44], "create_classification_model": 30, "create_dataset": [15, 16], "create_dimensionality_reduction_model": [39, 40], "criterion": [4, 30], "critic": [22, 38, 43], "cross": [7, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 38, 41], "cuda": [5, 33, 34, 37], "current": 21, "custom": [3, 6, 7, 12, 22, 35, 36, 37], "custom_classifi": 3, "customclassifi": 3, "customiz": 13, "cv": 7, "cv_iter": [21, 22, 23, 24, 25, 26, 27], "data": [2, 3, 5, 7, 10, 11, 13, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39], "data_frame_raw": 15, "datafram": [2, 15], "dataset": [3, 7, 9, 10, 11, 14, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34, 35, 36, 37, 38, 43, 45], "dataset_dictionari": [15, 16], "dataset_gener": 45, "dataset_id": [15, 16], "dataset_obj": 10, "dataset_properti": 36, "dataset_read": [43, 45], "decai": [33, 34, 36, 37], "decid": 22, "decis": [2, 3, 5, 10, 13, 23, 24, 25, 26, 27, 30, 36], "decision_funct": [2, 3, 5, 10, 13, 29, 30, 31, 32, 33, 34, 36, 38], "deep": [3, 13, 24, 31, 33], "def": 3, "default": [2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42], "defin": [3, 4, 10, 22, 40, 42], "definit": [17, 18], "delai": 16, "delet": [2, 29], "delete_tmp_folder_after_termin": [2, 29], "dens": 12, "densiti": 19, "depend": 5, "deploi": 1, "depth": 4, "deriv": [17, 18, 22], "descent": [33, 34, 36, 37], "describ": 30, "descript": [15, 16], "design": [2, 5, 16, 17, 18, 20, 22, 24, 28], "detect": [9, 11, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43], "detection_decis": [21, 22, 23, 24, 25, 26, 27], "detection_method": 22, "detector": 43, "determin": [2, 7, 22], "devic": [5, 33, 34, 35, 36, 37], "df_data": 2, "diag": 30, "diagnos": 22, "diagon": 30, "dict": [2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38], "dictionari": [2, 4, 15, 16, 17, 18, 19, 22], "differ": [5, 7, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 33, 41, 45], "dim": 37, "dimens": 37, "dimension": [2, 5, 12, 13, 30, 32, 33, 34, 36, 38, 39, 40], "directli": 3, "directori": [2, 21, 22, 23, 24, 25, 26, 27, 29, 38], "discrimin": [5, 30, 38, 40], "dispatch": 7, "displai": 19, "dist": 19, "distanc": [3, 4, 14, 17, 18, 30, 31], "distribut": [5, 10, 11, 17, 18, 19, 30, 35, 37, 38, 40], "diverg": [33, 34, 37], "divis": 41, "document": 0, "doe": 10, "donsker": [33, 34, 37], "donsker_varadhan": [33, 34, 37], "donsker_varadhan_softplu": [33, 34, 37], "dropout_prob": 4, "due": 25, "dummyclassifi": 11, "dure": [2, 5, 7, 8, 10, 13, 15, 16, 21, 22, 23, 24, 25, 26, 27, 30, 34, 36, 37, 38, 41], "e": [3, 12, 17, 18, 33, 36, 37, 41], "each": [3, 4, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 30, 31, 33, 35, 36, 37, 41], "earli": 13, "early_stop": 13, "easili": 22, "edg": 41, "effect": [22, 27, 33, 43], "effici": [7, 26, 27, 38], "either": 5, "element": 37, "emb_drop": 4, "embed": [5, 30, 38, 40], "emploi": [22, 24], "enabl": [7, 34], "encod": [15, 16, 33, 34, 35], "encode_class": [33, 34], "encount": 7, "enhanc": [6, 38], "ensembl": [5, 32, 33, 38], "ensur": [2, 5, 21, 22, 23, 24, 25, 26, 27, 29, 30, 36, 37, 38], "ent_i": 17, "entir": [7, 22], "entri": 22, "entropi": [4, 17, 18, 41], "entropy_i": [17, 18], "entropy_output": 18, "environ": 44, "epoch": [13, 33, 34, 36], "epsilon": 41, "equal": 19, "equip": 5, "error": [2, 5, 7, 13, 15, 22, 23, 24, 25, 26, 27, 34, 36, 41], "error_scor": 7, "especi": 19, "essenti": [11, 39], "estim": [3, 7, 8, 10, 11, 13, 17, 18, 20, 22, 23, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43], "estimate_mi": [29, 30, 31, 32, 33, 34, 36, 38, 45], "estimated_mi": 41, "estimated_mi_log_loss": 45, "estimated_mi_mid_point": 45, "estimated_mutual_inform": 22, "eval_metr": [2, 29], "evalu": [2, 5, 7, 10, 13, 14, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 41], "evaluate_candid": 7, "evaluate_scor": [21, 22, 24, 25, 26, 27], "exact": [22, 23, 24, 25, 26, 27], "exampl": [3, 19, 33, 34, 45], "exce": 5, "except": [23, 24, 25, 26], "exclud": [2, 29], "exclude_model_typ": 2, "execut": [7, 21, 23, 24, 25, 26, 27], "exhibit": 22, "exist": [22, 45], "expand": 10, "experi": [20, 21, 22, 23, 24, 25, 26, 27], "exploit": 15, "explor": [7, 22, 23, 24, 25, 26], "exponenti": 37, "export": 44, "extend": [6, 7, 15, 21, 22, 23, 24, 25, 26, 27, 29, 32, 38], "extens": [33, 34, 36, 37], "extra": 19, "extract": [8, 15, 16], "extratreesclassifi": [5, 30, 38, 40], "f": [33, 34, 37, 45], "facilit": [2, 7, 22, 39], "factor": [5, 19, 30, 38, 40], "fail": 8, "fallback": 41, "fals": [2, 7, 12, 13, 30, 36, 37, 41, 42], "false_negative_r": 41, "false_positive_r": 41, "famili": [22, 23, 24, 25, 26, 27], "fano": 41, "fanos_adjusted_lb": 41, "fanos_adjusted_lower_bound": 41, "fanos_lb": 41, "fanos_lower_bound": 41, "fastai": 4, "fdiverg": [33, 34, 37], "featur": [2, 5, 6, 8, 10, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 28, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40], "feature_fract": 4, "feedforward": [13, 35], "fetch": [15, 16], "file": [2, 7, 21, 22, 23, 24, 25, 26, 27, 29, 38], "filenam": 22, "fill": [15, 16], "final": [33, 34, 35, 36], "final_loss": [33, 34, 36], "final_scor": 33, "find": [7, 21, 22, 45], "first": [3, 5, 8, 23, 24, 25, 26, 37, 42], "fisher": [22, 23, 24, 25, 26, 27], "fit": [2, 3, 5, 7, 10, 11, 13, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38], "fit_param": [7, 21, 22, 23, 24, 25, 26, 27], "flag": [2, 5, 21, 22, 23, 24, 25, 26, 27], "flexibl": [22, 29], "flip": [17, 18], "flip_i": [17, 45], "flip_y_prob": 17, "float": [2, 3, 5, 8, 10, 13, 15, 16, 17, 18, 19, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 42], "fnr": 41, "focu": [17, 18], "focus": [2, 16], "fold": [7, 16, 17, 18, 23, 24, 25, 26, 27, 42], "fold_id": [16, 17, 18], "folder": [2, 29], "follow": [23, 24, 25, 26], "forest": [25, 45], "form": [2, 3, 5, 13, 31, 36], "format": [13, 15, 16, 19, 22], "formula": [17, 18, 41], "forward": 35, "found": 11, "fpr": 41, "frac": [17, 18, 36, 41], "fraction": [13, 17], "framework": [1, 20, 21, 26, 29, 32, 38], "frequenc": [33, 34, 36, 37], "frequent": 11, "from": [2, 3, 4, 7, 8, 11, 15, 16, 17, 18, 19, 22, 29, 31, 32, 33, 38, 39, 40, 41, 42, 45], "full": [17, 18, 22, 30], "fulli": [5, 35], "function": [0, 2, 3, 5, 6, 7, 8, 9, 10, 11, 12, 13, 17, 18, 19, 22, 23, 24, 25, 26, 27, 30, 32, 34, 35, 36, 37, 39, 40, 41, 42], "further": [21, 22, 24, 25, 26], "g": [3, 33, 37], "gain": 22, "gamma": 4, "gaussian": [18, 23, 30], "gbm": [2, 4, 29], "gen_typ": [17, 18, 19], "gener": [2, 5, 7, 9, 10, 14, 17, 18, 19, 22, 23, 24, 25, 26, 29, 30, 36, 38, 39, 45], "generate_dataset": [10, 17, 18, 45], "generate_samples_for_class": [17, 18], "generate_samples_per_class": 19, "get": [2, 3, 7, 8, 9, 13, 17, 18, 31, 37], "get_bayes_mi": [17, 18], "get_bayes_predictor_scor": 10, "get_data": [15, 16], "get_k_rank_model": 2, "get_mine_loss": 37, "get_model": 2, "get_optimizer_and_paramet": 37, "get_param": [3, 13, 31], "get_parameters_at_k": 8, "get_prob_dist_x_given_i": [17, 18], "get_prob_flip_y_given_x": [10, 17], "get_prob_fn_margx": [17, 18], "get_prob_x_given_flip_i": 17, "get_prob_x_given_i": [17, 18], "get_prob_y_given_x": [10, 17, 18], "get_sampled_imbalanced_data": [15, 16], "get_scor": 8, "get_weight": 12, "gini": 4, "git": 44, "github": 44, "give": 41, "given": [3, 10, 11, 17, 18, 19, 29, 31, 32, 38, 41], "gmm": [23, 30], "gmm_mi_estim": 23, "gmmmiestim": 30, "goal": 34, "good": 30, "gpu": [5, 35, 36], "gradient": [13, 33, 34, 36, 37], "greater": 19, "ground": 45, "ground_truth_mi": 45, "group": 22, "guid": 43, "h": [17, 18, 36, 41], "h5py": 22, "ha": [22, 23, 24, 25, 26, 30, 37], "handl": [2, 5, 7, 19, 22, 25, 35, 36, 37, 41], "hash": [21, 22, 23, 24, 25, 26, 27], "hash_valu": [21, 22, 23, 24, 25, 26, 27], "have": [3, 13, 17, 18, 31], "hellman": 41, "helmann_raviv_funct": 41, "helmann_raviv_upper_bound": 41, "help": [17, 18, 33, 36, 37], "here": 3, "hidden": [13, 33, 34, 35, 36], "hidden_lay": 35, "hidden_s": 4, "high": [5, 33], "highest": [10, 30], "highli": 26, "histogram": [22, 29, 32, 38], "holm": [22, 23, 24, 25, 26, 27], "hot": [33, 34, 35], "how": [3, 22], "hp_iter": [23, 24, 25, 26, 27], "hr_u": 41, "hrf_valu": 41, "http": 44, "human": 19, "hyperparamet": [2, 4, 6, 7, 8, 21, 22, 23, 24, 25, 26, 27, 29, 34, 38], "hyperparameter_optim": [21, 22, 23, 24, 25, 26, 27], "hyperparameter_tune_kwarg": 2, "hyperplan": [3, 30, 31], "hypothes": [21, 22, 23, 24, 25, 26, 27], "hypothesi": [23, 24, 25, 26, 27, 42], "hypothesis_reject": [21, 22, 23, 24, 25, 26, 27], "i": [2, 3, 4, 5, 7, 9, 10, 11, 12, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 33, 34, 35, 36, 37, 38, 40, 41, 42, 44], "id": [15, 16, 17, 18], "identifi": [7, 21, 22, 23, 24, 25, 26, 27, 34], "iid": 7, "ild": 44, "imbal": [15, 16, 17, 18, 19, 37], "imbalanc": [15, 16, 35, 36, 37], "implement": [3, 6, 7, 9, 11, 13, 20, 22, 23, 24, 25, 26, 27, 31, 33, 34, 35, 42], "import": [3, 5, 30, 38, 40, 45], "improv": [24, 33, 34, 36, 37, 41], "in_dim": 35, "inadvert": 22, "includ": [2, 7, 8, 20, 22, 23, 29, 32, 33, 34, 37, 38, 39, 41], "incomplet": 22, "inconsist": 33, "incorpor": [26, 27, 37], "incorrectli": [15, 16], "index": [21, 22, 24, 25, 26], "indic": [2, 5, 21, 22, 23, 24, 25, 26, 27, 30, 33, 34], "individu": 33, "infin": [33, 34, 36, 37], "inform": [2, 9, 10, 11, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 42, 43, 45], "informationleakagedetector": [21, 22, 26], "inher": 25, "inherit": [3, 32], "init": 37, "initi": [2, 5, 10, 13, 15, 16, 22, 37, 38], "inner": [23, 24, 25, 26, 27], "inner_cv_iter": 26, "input": [2, 3, 5, 8, 10, 11, 12, 13, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41], "instal": 43, "instanc": [2, 3, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 38], "instanti": [3, 32], "instroduc": 18, "int": [2, 3, 4, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42], "integ": [8, 12, 15, 16, 17, 18], "integr": [22, 24, 29, 38], "intend": [10, 22, 44], "interact": 25, "interfac": [3, 5], "interpret": 25, "interrupt": 7, "intervent": 1, "introduc": 17, "invalid": 23, "involv": [16, 34], "is_pc_softmax": [35, 36], "isoton": [22, 24, 25, 26, 29, 32, 38], "issu": 41, "iter": [7, 21, 22, 23, 24, 25, 26, 27, 33, 34], "its": [2, 8, 25, 30, 32, 33, 34, 36, 37], "itself": 3, "j": [17, 18, 36, 41], "job": [7, 26], "joint": [10, 35, 37], "just": 9, "k": [2, 8, 17, 18, 36, 41], "k_class": [17, 18], "keepdim": 37, "kei": [8, 15, 16, 17, 18, 19, 22], "kera": [9, 12, 13], "kernel": 13, "kernel_initi": 13, "keyword": [2, 3, 5, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38], "kl": [33, 34, 37], "knn": 4, "kwarg": [2, 5, 10, 11, 12, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38], "kwd": [2, 3, 5, 10, 12, 13, 29, 30, 31, 32, 33, 34, 36, 38], "l2": 13, "l2_leaf_reg": 4, "label": [2, 3, 5, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41], "label_binar": 33, "label_col": 19, "label_proport": [35, 37], "labelbinar": 33, "lambda": 18, "lambda_l1": 4, "lambda_l2": 4, "larg": 26, "latest": 22, "latter": [3, 13, 31], "layer": [9, 13, 24, 33, 34, 35, 36, 37], "lda": [5, 30, 38, 40], "lead": 22, "leaderboard": 2, "leakag": [9, 11, 15, 16, 20, 21, 22, 23, 24, 25, 26, 27, 28, 42, 43], "leakdetectai": 44, "learn": [1, 2, 3, 4, 5, 9, 11, 13, 17, 20, 21, 22, 23, 24, 26, 29, 30, 32, 33, 34, 36, 37, 38, 40, 45], "learner": [8, 21, 22, 23, 26, 29, 32, 38], "learner_param": [8, 21, 22, 23, 24, 25, 26, 27, 29, 32, 38], "learning_r": [4, 13, 33, 34, 36, 37], "lecun_norm": 13, "left": 7, "less": 19, "level": [2, 3, 5, 10, 17, 18, 19, 29, 30, 32, 33, 34, 36, 38], "leverag": [1, 2, 10, 21, 29, 30, 32, 34, 38, 43], "librari": [2, 7], "lightweight": [26, 27], "like": [1, 2, 3, 4, 5, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38], "likelihood": 30, "limit": [2, 29], "linear": [5, 12, 30, 33, 35, 37, 38, 40], "list": [2, 7, 8, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 30, 33, 35, 36, 37], "log": [2, 5, 6, 7, 8, 10, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 36, 37, 38, 41, 42, 45], "log2": 4, "log_callback": 8, "log_dist_sampl": 19, "log_loss_estim": 41, "log_loss_mi": 22, "log_loss_mi_beta_calibr": 22, "log_loss_mi_estim": [32, 45], "log_loss_mi_histogram_bin": 22, "log_loss_mi_isotonic_regress": 22, "log_loss_mi_platt_sc": 22, "log_loss_mi_temperature_sc": 22, "log_mean_exp": 37, "logarithm": [37, 41], "logger": [2, 5, 7, 10, 13, 15, 16, 17, 18, 19, 21, 22, 26, 30, 32, 36], "logic": 3, "logist": 30, "logisticregress": 30, "logit": [17, 18, 36, 37], "loglossmi": [29, 32, 38], "loglossmibetacalibr": [29, 32, 38], "loglossmihistogrambin": [29, 32, 38], "loglossmiisotonicregress": [29, 32, 38], "loglossmiplattsc": [29, 32, 38], "loglossmitemperaturesc": [29, 32, 38], "loss": [8, 13, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 32, 33, 34, 36, 37, 38, 41, 45], "loss_funct": [13, 33, 34, 36], "lower": [4, 41], "m": 37, "machin": [1, 2, 4, 17, 20, 21, 22, 23, 26, 29], "made": [23, 24, 25, 26, 27], "mai": [23, 24, 25, 26, 27, 29, 32], "main": [7, 22], "major": [15, 16, 22, 23, 24, 25, 26], "majorityvot": 11, "make": [3, 9, 19, 27, 29, 38], "manag": [21, 22, 23, 24, 25, 26, 27], "mani": 22, "manipul": 15, "manual": 1, "map": [3, 13, 31], "marg_x": [17, 18], "margin": [17, 18, 37], "matric": [17, 18, 22, 30], "matrix": [2, 5, 8, 13, 15, 16, 17, 18, 21, 22, 24, 25, 26, 30, 33, 34, 36, 38, 40], "max_depth": 4, "max_featur": 4, "maximum": [13, 26, 41], "mcmc": [17, 18], "mcmcbayesmi": [17, 18], "mcmcloglossbayesmi": [17, 18], "mcmcpcsoftmaxbayesmi": [17, 18], "mcmcsoftmaxbayesmi": [17, 18], "mean": [3, 17, 18, 22, 29, 31, 32, 33, 34, 36, 37, 38], "measur": 30, "mechan": [8, 22], "median": 22, "memori": [5, 26], "messag": [2, 5, 13, 15, 16, 36], "meta": [5, 30, 38, 40], "method": [2, 3, 5, 7, 10, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 34, 36, 37, 38, 40, 41, 45], "metric": [2, 3, 13, 17, 18, 21, 22, 23, 24, 25, 26, 29, 31, 32, 33, 34, 37, 39, 45], "metric_nam": [17, 18], "mi": [17, 18, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43], "mi_estim": [43, 45], "mi_estimator_classif": 45, "mi_pp": 17, "mi_techniqu": 23, "mi_val": [34, 36], "mi_validation_fin": 33, "microsecond": 16, "mid": 45, "mid_point": 41, "mid_point_mi": [22, 41], "mid_point_mi_estim": 45, "midpoint": [22, 41], "miestimationleakagedetector": 23, "miestimatorbas": [30, 31, 32, 33, 34, 36], "might": 3, "min_data_in_leaf": 4, "min_samples_leaf": 4, "min_samples_split": 4, "mind": 22, "mine": [23, 33, 34, 35, 37], "mine_mi_estim": 23, "minemiestim": 33, "minemiestimatorms": 34, "minim": [1, 2, 34], "minor": [15, 16, 17, 18, 19], "miss": [15, 16, 22], "mixtur": [23, 30], "mlp": [13, 24], "mlpleakagedetector": 24, "mode": 13, "model": [1, 2, 3, 4, 5, 7, 10, 13, 17, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 45], "model_": 3, "model_nam": 2, "model_save_path": 13, "modifi": [17, 18, 34, 36, 37], "modul": [1, 4, 6, 9, 14, 19, 20, 28, 35, 36, 37, 39, 40, 41], "moment": [33, 34, 36, 37], "momentum": [33, 34, 36, 37], "mon_it": [33, 34], "more": [13, 19, 33, 34, 36, 37, 41], "most": [11, 22], "mse": 34, "multi": [9, 19, 24, 41], "multilayerperceptron": 13, "multipl": [10, 19, 22, 23, 24, 25, 26, 27, 33], "multipli": 37, "multivari": [17, 18, 19], "multivariate_normal_frozen": [17, 18, 19], "must": [3, 5, 13, 15, 16, 17, 18, 19, 30, 33, 34, 36, 37, 38, 40], "mutual": [17, 18, 20, 22, 23, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41, 43, 45], "mutual_inform": [17, 18, 29, 31, 32, 38], "n_class": [2, 3, 5, 8, 10, 11, 13, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 45], "n_ensembl": [5, 38], "n_estim": 4, "n_featur": [2, 3, 5, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 38, 45], "n_hidden": [13, 34, 35, 36], "n_hypothesi": [21, 22, 23, 24, 25, 26, 27], "n_inner_fold": [23, 24, 25, 26, 27], "n_instanc": [17, 18], "n_iter": 7, "n_job": [7, 26], "n_model": [21, 22, 24, 25, 26, 27, 30, 33], "n_neighbor": 4, "n_output": [3, 31], "n_point": 7, "n_reduc": [5, 30, 38, 40], "n_sampl": [2, 3, 5, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38], "n_samples_test": 8, "n_samples_train": 8, "n_test_fold": 42, "n_training_fold": 42, "n_unit": [13, 34, 35, 36], "name": [2, 3, 13, 15, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 31, 44], "nan": 41, "ndarrai": [17, 18, 37, 41, 42], "necessari": [13, 22], "need": 33, "neg": [5, 30, 36, 38, 40, 41], "neighbor": [5, 30, 38, 40], "nest": [3, 13, 31], "network": [5, 13, 15, 33, 34, 35, 36, 37], "neural": [13, 23, 33, 34, 35, 36, 37], "new": 3, "nllloss": 36, "nmf": [5, 30, 38, 40], "nn": [35, 36, 37], "nn_torch": 4, "nois": [17, 18, 45], "non": [5, 30, 33, 38, 40, 41], "none": [2, 3, 5, 7, 10, 11, 12, 13, 15, 16, 17, 19, 21, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38], "norm": [33, 34, 36, 37], "norm_lay": 12, "normal": [12, 13, 17, 18, 19, 37, 41], "normalize_before_activ": 12, "normalizeddens": 12, "note": [3, 8, 19, 22, 23, 24, 25, 26, 27, 33, 34, 37, 41], "nother": 23, "notimplementederror": [3, 22, 31], "np": 2, "num_comp": 30, "num_lay": 4, "num_leav": 4, "number": [2, 5, 7, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 35, 36, 38, 40, 41, 42], "numer": 7, "numpi": [17, 18, 37], "nwtowkr": 35, "obj": 22, "object": [0, 2, 3, 5, 7, 8, 10, 13, 15, 16, 17, 18, 19, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34], "obscur": [21, 22, 23, 24, 25, 26, 27], "obtain": [5, 33], "occur": [7, 22, 23, 24, 25, 26], "off": 7, "offer": [1, 6, 28], "on_step": 8, "one": [5, 10, 13, 15, 16, 17, 18, 19, 23, 30, 33, 34, 35, 36, 37, 38, 40, 41], "onli": [11, 15, 16, 23], "openml": [14, 15, 16], "openmldataset": 15, "openmlpaddingdatasetread": 15, "openmltimingdatasetread": [15, 16], "oper": [5, 19, 37, 39], "optim": [6, 7, 8, 10, 13, 21, 22, 23, 24, 25, 26, 27, 29, 30, 33, 34, 36, 37, 38], "optimist": 22, "optimizer_cl": [33, 34], "optimizer_config": 37, "optimizer_kwarg": 7, "optimizer_str": [13, 33, 34, 36, 37], "optimizers_file_path": 7, "option": [2, 3, 5, 7, 10, 11, 12, 13, 15, 16, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 42], "orchestr": 7, "organ": 22, "origin": 34, "orign": 9, "orthogon": [17, 18, 37], "other": [3, 5, 19, 22], "out": 33, "out_dim": 35, "output": [2, 5, 9, 11, 12, 13, 19, 29, 35, 37, 41, 42], "output_fold": [2, 29], "over": 33, "overlap": [17, 18], "overli": 22, "overridden": [10, 22], "own": 30, "own_softmax": 37, "p": [4, 22, 42], "p_c_softmax_mi": 22, "p_e": 41, "p_j": [17, 18, 36, 41], "p_pred": [8, 10, 13, 21, 22, 24, 25, 26, 27, 29, 32, 33, 34, 36, 38, 41], "p_valu": 42, "packag": [1, 6, 9, 14, 20, 28, 39, 44], "pad": [15, 21, 22, 23, 24, 25, 26, 27], "padding_cod": 22, "padding_nam": [21, 22, 23, 24, 25, 26, 27], "pair": [22, 23, 24, 25, 26, 27, 42], "paired_ttest": 42, "panda": [2, 15], "parallel": [7, 26], "param": [3, 13, 31], "paramet": [2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42], "parent": [23, 24, 25, 26, 27], "particularli": [27, 33, 34], "partit": 41, "pass": [7, 11, 12, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 35, 38], "path": [2, 5, 7, 13, 22], "pc": [17, 18, 22, 35, 36, 37, 41], "pc_softmax_emi": [17, 18], "pc_softmax_estim": 41, "pca": [5, 30, 38, 40], "pcsoftmaxmi": [29, 32, 38], "pcsoftmaxmiestim": 36, "pdf": [9, 10, 17, 18, 19], "pe": 41, "pedictor": [17, 18], "per": [13, 17, 18, 19, 34], "percentag": 17, "perceptron": [9, 24], "perform": [2, 7, 10, 11, 15, 21, 22, 23, 24, 25, 26, 27, 29, 30, 37, 39, 41, 42], "permut": 34, "pip": 44, "pipelin": [3, 4, 13, 31], "pkl": 7, "platt": [22, 24, 25, 26, 29, 32, 38], "point": [22, 45], "popular": 20, "posit": [8, 10, 12, 17, 18, 30, 41], "possibl": [3, 13, 31], "potenti": [21, 22, 23, 24, 25, 26, 27], "power": [2, 38], "pre": [1, 12, 38], "pre_dispatch": 7, "precis": 43, "predefin": [2, 23, 24, 25, 26, 29], "predict": [2, 3, 5, 7, 8, 9, 10, 11, 13, 21, 22, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 45], "predict_proba": [2, 3, 5, 10, 13, 29, 30, 31, 32, 33, 34, 36, 38], "predictor": [9, 10], "preds_xi": 37, "preds_xy_tild": 37, "preprocess": [15, 16, 19], "present": 22, "prevent": [21, 22, 41], "primari": [23, 34], "princip": [5, 30, 38, 40], "print": [30, 33, 34, 45], "prior": [5, 11, 17, 18, 36, 41], "priorclassifi": 11, "privat": [2, 5, 7, 13, 15, 16, 17, 18, 22, 30, 34], "prob_x_given_flip_i": 17, "prob_x_given_i": [17, 18], "prob_y_given_x": [17, 18], "probabilist": 30, "probability_calibr": 8, "probabl": [2, 3, 5, 8, 10, 11, 13, 17, 18, 19, 21, 22, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 37, 38, 41], "problem": [2, 10], "process": [1, 2, 6, 7, 8, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 38], "produc": [33, 37], "product": 37, "progress": [6, 7], "propag": [33, 34, 36, 37], "properti": 2, "proport": [3, 17, 18, 19, 30, 31, 35, 36, 37], "provid": [1, 3, 5, 6, 7, 8, 10, 14, 15, 16, 17, 18, 19, 20, 22, 28, 30, 32, 34, 38, 39, 40, 41], "public": 0, "purpos": [5, 14, 26, 30, 38, 40], "py": 44, "python": [40, 41, 44], "pytorch": [33, 34], "quantif": 43, "quantifi": 43, "quickstart": 43, "quit": 45, "r": [29, 31, 32, 38, 44], "rais": [3, 7, 19, 22, 23, 24, 25, 26, 31, 37, 40], "random": [2, 5, 7, 10, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 38, 45], "random_st": [2, 5, 7, 10, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 45], "randomclassifi": 11, "randomforest": 25, "randomforestclassifi": [5, 30, 32, 38, 40], "randomforestleakagedetector": 25, "randomli": [11, 17], "randomst": [2, 7, 10, 11, 15, 16, 17, 18, 22, 23, 24, 25, 26, 27, 32], "rang": [22, 41], "rank": [2, 42], "rapid": 38, "rate": [13, 22, 23, 24, 25, 26, 27, 33, 34, 36, 37, 41], "ratio": [15, 16, 19, 41], "raviv": 41, "raw": [15, 16, 17, 18, 36], "read": [14, 15, 16, 22], "readabl": 19, "reader": [15, 16], "real": [4, 13, 30], "realm": 43, "recogn": [19, 37], "record": [21, 22, 26], "recurs": [5, 22, 30, 38, 40], "recursive_feature_elimination_et": [5, 30, 38, 40], "recursive_feature_elimination_rf": [5, 30, 38, 40], "reduc": [5, 18, 26, 30, 33, 34, 36, 37, 38, 40], "reduce_dataset": 26, "reduced_hyperparamet": 4, "reduct": [5, 21, 22, 23, 24, 25, 26, 27, 30, 38, 39, 40], "reduction_techniqu": [5, 30, 38, 40], "refer": 22, "refin": 41, "refit": 7, "reg_alpha": 4, "reg_covar": 30, "reg_lambda": 4, "reg_strength": [13, 33, 34, 36, 37], "regress": [22, 24, 25, 26, 29, 30, 32, 38], "regular": [13, 30, 33, 34, 36, 37], "relat": [2, 15, 21, 22, 23, 24, 25, 26, 27, 29, 41], "relationship": 33, "releas": [5, 43], "relev": [15, 16], "relu": [12, 13], "remov": [5, 19, 30, 38, 40, 41], "remove_boosting_model": [2, 29], "replac": 19, "repositori": 44, "repres": [10, 15, 16, 37], "represent": [33, 34, 37], "reproduc": [2, 5, 10, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 33, 34, 36, 38], "requir": [3, 27, 44], "reshap": 13, "reshape_input": 13, "resourc": 5, "respect": [3, 15, 16], "rest": 41, "restor": 22, "result": [7, 21, 22, 23, 24, 25, 26, 27, 33, 37, 45], "results_fil": 22, "results_file_backup": 22, "resum": [6, 7], "resumpt": 7, "retain": 37, "retriev": [2, 8, 15, 16, 19], "return": [2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42], "return_train_scor": 7, "rf": 4, "rf_backup_nam": 22, "rf_name": 22, "rmsprop": [33, 34, 36, 37], "robust": [22, 25, 30, 33, 34, 36, 37, 38, 41], "root": [33, 34, 36, 37], "round": 30, "routin": 22, "row": [21, 22], "run": [7, 21, 22, 23, 24, 25, 26, 27, 33, 34, 35, 37], "s_": [17, 18, 36, 41], "safe": 22, "same": [17, 18, 30], "sampl": [2, 3, 5, 7, 8, 10, 11, 13, 15, 16, 17, 18, 19, 23, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 41], "sample_weight": [2, 3, 5, 10, 11, 13, 29, 30, 31, 32, 33, 34, 36, 38], "samples_per_class": [17, 18, 19, 45], "santhi": 41, "santhi_vardi_upper_bound": 41, "save": [2, 5, 6, 7, 13, 26, 29, 38], "scale": [19, 22, 24, 25, 26, 29, 32, 38], "scaler": 3, "scenario": [15, 16, 17, 18, 19, 26, 27, 29, 34, 36, 38, 41], "schedul": 2, "scikit": [3, 5, 6, 7, 11, 26, 30, 38, 40], "scipi": [17, 18, 19], "score": [2, 3, 5, 7, 8, 10, 13, 17, 18, 22, 29, 30, 31, 32, 33, 34, 35, 36, 38, 41], "scoring_model": 13, "seamlessli": 2, "search": [4, 7, 8, 22, 23, 24, 25, 26, 27], "search_kei": 8, "search_spac": [7, 23, 24, 25, 26, 27], "searcher": 2, "second": [2, 29, 42], "seed": [2, 5, 17, 18, 29, 30, 36, 38], "seek": [33, 34, 36, 37], "select": [5, 15, 16, 17, 18, 23, 24, 25, 26, 30, 33, 34, 38, 40], "select_from_model_et": [5, 30, 38, 40], "select_from_model_rf": [5, 30, 38, 40], "selection_model": [5, 30, 40], "self": [3, 11, 13, 29, 30, 31, 32, 33, 34, 36, 38], "semi": [17, 18], "separ": [5, 15, 16, 17, 18, 30, 38, 40], "seri": 41, "serv": [3, 22], "server": [15, 16], "set": [3, 7, 10, 11, 12, 13, 21, 22, 24, 25, 26, 30, 31, 37, 42], "set_param": [3, 13, 31], "set_weight": 12, "setup": [2, 22, 44], "sever": 4, "sgd": [13, 33, 34, 36, 37], "shape": [2, 3, 5, 8, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 36, 37, 38, 45], "share": 30, "should": [3, 10, 17, 18, 19, 22, 30, 33, 34, 37], "show": [21, 22, 23, 24, 25, 26, 27], "side": [15, 16, 42], "sign": [3, 30, 31, 42], "signific": [21, 22, 23, 24, 25, 26, 27, 37], "similar": 45, "simpl": [3, 11, 13, 31, 33, 34, 35, 36, 37], "simpler": 4, "simplifi": 1, "simul": [15, 16, 17, 18], "singl": [7, 17, 18, 19, 30], "size": [21, 22, 23, 24, 25, 26, 30, 34], "sklearn": [3, 13, 32, 45], "sklearn_allow_deprecated_sklearn_package_instal": 44, "sklearnleakagedetector": [23, 24, 25, 26, 27], "skopt": 8, "small": [27, 38, 41, 45], "smooth": [4, 33], "sne": 40, "snippet": 45, "so": [3, 13, 22, 31], "softmax": [17, 18, 22, 29, 32, 35, 36, 37, 38, 41], "softmax_emi": [17, 18], "softplu": [33, 34, 37], "some": 45, "sometim": [3, 31], "sourc": [2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42], "space": [4, 7, 12, 19, 23, 24, 25, 26, 27, 30], "spars": [33, 34, 36, 37], "specif": [2, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 34], "specifi": [2, 5, 12, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 37, 38, 40], "spheric": 30, "split": [7, 21, 22, 23, 24, 25, 26, 29, 31, 32, 38], "sqrt": 4, "squar": [33, 34, 36, 37], "stabil": 38, "stabl": 33, "stack": [2, 29], "standard": [3, 41], "standardscal": 3, "stat": [17, 18, 19], "stat_net": 34, "state": [1, 2, 6, 7, 10, 11, 13, 15, 16, 17, 18, 22, 30, 32, 33, 34, 43], "statist": [22, 23, 24, 25, 26, 27, 35, 39, 43], "statnet": [34, 35], "step": [21, 22, 45], "still": 8, "stochast": [5, 30, 33, 34, 36, 37, 38, 40], "stop": 13, "storag": 22, "store": [10, 17, 18, 21, 22, 23, 24, 25, 26, 27, 33], "str": [2, 5, 7, 8, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 32, 38, 40, 42], "strategi": [7, 11, 15, 22, 23, 24, 25, 26], "stratifi": [23, 24, 25, 26], "stratifiedkfold": 22, "stratifiedshufflesplit": 26, "streamlin": 39, "strength": [13, 33, 34, 36, 37], "string": [7, 8, 15, 16, 19, 30, 37], "structur": [22, 32], "subclass": [3, 10, 22, 31], "subobject": [3, 13, 31], "subpackag": 39, "subsequ": 21, "subtract": 41, "suit": [20, 25, 34], "suitabl": 27, "sum": [37, 41], "sum_": [17, 18, 36, 41], "summari": 45, "supervis": 32, "support": [4, 5, 8, 19, 22, 23, 24, 25, 26, 35, 38], "sv_u": 41, "synthet": [14, 17, 18, 45], "synthetic_data_gener": 45, "syntheticdatasetgener": [17, 45], "syntheticdatasetgeneratordist": 18, "system": 43, "t": [5, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 38, 40, 42], "tabpfn": [1, 5, 26, 27, 38], "tabpfn_fold": 26, "tabpfnclassifi": 5, "tabpfnleakagedetector": 27, "tabpfnmiestim": 38, "tabular": [2, 5, 27, 38], "tabularpredictor": 2, "tailor": [15, 34], "take": [33, 41], "target": [2, 3, 5, 8, 10, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 38], "task": [2, 5, 13, 29, 33, 35, 36, 38, 39, 41], "techniqu": [5, 20, 22, 23, 24, 25, 26, 27, 28, 30, 34, 38, 40], "temperatur": [22, 29, 32, 38], "temporari": [2, 29], "tensor": [12, 33, 34, 35, 37], "term": 41, "test": [3, 7, 8, 13, 14, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 38, 39, 42, 43], "text": [17, 18, 36], "th": [2, 8], "than": 19, "thei": [19, 41], "them": [7, 21, 37], "thi": [2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 43], "threshold": [5, 26], "through": [34, 35, 39], "ti": 30, "time": [2, 5, 15, 16, 29], "time_limit": [2, 29], "too": 26, "tool": [1, 4, 38, 43, 45], "top": 26, "torch": [5, 33, 34, 35, 36, 37], "total": [17, 18, 19, 36], "trace": 15, "track": 6, "tradit": 14, "train": [1, 2, 3, 5, 7, 8, 10, 11, 13, 21, 22, 23, 24, 25, 26, 27, 29, 31, 32, 33, 34, 36, 37, 38, 42], "transform": [5, 30, 38, 40, 41], "tri": 8, "true": [2, 3, 5, 7, 10, 12, 13, 15, 16, 21, 22, 24, 25, 26, 29, 31, 32, 33, 34, 35, 36, 38, 41, 42, 44], "truth": 45, "tsne": [5, 30, 38, 40], "tune": [2, 4, 7, 8, 26, 29, 34], "tupl": [7, 12, 15, 16, 17, 18, 26, 37], "two": [23, 42], "txt": 44, "type": [2, 3, 5, 7, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42], "typic": 35, "underli": [10, 22], "underscor": 19, "uniform": [4, 11], "uniqu": [11, 21, 22, 23, 24, 25, 26, 27], "unit": [12, 13, 33, 34, 35, 36], "updat": [3, 8, 13, 22, 31], "update_params_at_k": 8, "upper": [4, 41], "us": [2, 3, 4, 5, 7, 8, 9, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 40, 41, 42, 45], "use_hyperparamet": [2, 29], "user": [2, 19, 22, 43], "util": [6, 8, 14, 20, 25, 37, 43, 45], "v": 41, "val_siz": 30, "valid": [1, 7, 13, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 36, 38], "validation_loss": [21, 23, 24, 25, 26, 27], "validation_split": 13, "valu": [2, 3, 5, 7, 8, 9, 10, 11, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 34, 36, 38, 41, 42], "valueerror": [19, 23, 37, 40], "varadhan": [33, 34, 37], "vardi": 41, "vari": [17, 18, 33], "variabl": [13, 30, 33, 34, 35], "varianc": [30, 33, 42], "variant": [33, 34, 36, 37], "variat": 18, "variou": [2, 3, 5, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 32, 39, 40, 41], "vector": [2, 5, 8, 13, 15, 16, 17, 18, 30, 33, 34], "verbos": [2, 3, 5, 7, 10, 13, 19, 29, 30, 31, 32, 33, 34, 36, 38, 42], "verifi": 22, "versatil": 26, "version": [26, 33, 34, 37], "via": 26, "visual": [5, 30, 38, 40], "vote": [22, 23, 24, 25, 26], "vulner": [15, 16], "vulnerable_class": [15, 16], "w": [29, 31, 32, 38], "w_b": 12, "w_d": 12, "wa": 7, "wai": [19, 45], "wd": 4, "we": 9, "weight": [2, 3, 4, 5, 10, 11, 12, 13, 29, 30, 31, 32, 33, 34, 36, 37, 38, 40], "well": [3, 13, 23, 24, 25, 26, 31], "when": [18, 19, 22, 23, 33], "where": [2, 5, 7, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 33, 34, 36, 37, 38, 41], "whether": [2, 5, 13, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 35, 37], "which": [4, 5, 7, 9, 10, 11, 15, 16, 17, 18, 19, 22, 27, 29, 30, 32, 33, 34, 36, 37, 41, 45], "whose": 17, "wide": [22, 33, 34, 36, 37], "wilcoxon": 42, "wilcoxon_signed_rank_test": 42, "wise": [22, 23, 24, 25, 26, 27], "within": [21, 22, 23, 24, 25, 26, 43], "without": 42, "word": 19, "work": [2, 3, 5, 13, 26, 31, 44], "wrapper": [2, 5, 11], "x": [2, 3, 5, 8, 10, 11, 12, 13, 15, 16, 17, 18, 19, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 37, 38, 41, 45], "x1": 42, "x2": 42, "x_in": 35, "x_test": [3, 8, 21, 22, 24, 25, 26, 27, 33, 34], "x_train": [3, 8, 21, 22, 24, 25, 26, 27, 33, 34], "xgb": [2, 4, 29], "xt": 4, "y": [2, 3, 5, 10, 11, 13, 15, 16, 17, 18, 21, 22, 23, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 41, 45], "y_cat": 30, "y_pred": [2, 3, 5, 8, 10, 11, 13, 21, 22, 24, 25, 26, 27, 29, 30, 31, 32, 33, 34, 36, 38, 41, 45], "y_pred_cal": 8, "y_prob": [17, 18], "y_proba": [3, 31], "y_test": [3, 21, 22, 24, 25, 26, 27, 33, 34], "y_train": [3, 8, 21, 22, 24, 25, 26, 27, 33, 34], "y_true": [10, 41], "yet": 30, "you": [3, 45], "your": 3, "z_j": [17, 18, 36, 41], "z_k": [17, 18, 36, 41], "zero": [37, 41]}, "titles": ["\ud83d\udcd6 API References", "autoqild.automl", "autoqild.automl.autogluon_classifier", "autoqild.automl.automl_core", "autoqild.automl.model_configurations", "autoqild.automl.tabpfn_classifier", "autoqild.bayes_search", "autoqild.bayes_search.bayes_search_cv", "autoqild.bayes_search.bayes_search_utils", "autoqild.classifiers", "autoqild.classifiers.bayes_predictor", "autoqild.classifiers.blind_classifiers", "autoqild.classifiers.layers", "autoqild.classifiers.multi_layer_perceptron", "autoqild.dataset_readers", "autoqild.dataset_readers.open_ml_padding_dr", "autoqild.dataset_readers.open_ml_timming_dr", "autoqild.dataset_readers.synthetic_data_generator", "autoqild.dataset_readers.synthetic_data_generator_distance", "autoqild.dataset_readers.utils", "autoqild.detectors", "autoqild.detectors.autogluon_leakage_detector", "autoqild.detectors.ild_base_class", "autoqild.detectors.mi_estimator_detector", "autoqild.detectors.mlp_leakage_detector", "autoqild.detectors.random_forest_leakage_detector", "autoqild.detectors.sklearn_leakage_detector", "autoqild.detectors.tabpfn_leakage_detector", "autoqild.mi_estimators", "autoqild.mi_estimators.auto_gluon_estimator", "autoqild.mi_estimators.gmm_mi_estimator", "autoqild.mi_estimators.mi_base_class", "autoqild.mi_estimators.mi_estimator_classification", "autoqild.mi_estimators.mine_estimator", "autoqild.mi_estimators.mine_estimator_mse", "autoqild.mi_estimators.neural_networks_torch", "autoqild.mi_estimators.pc_softmax_estimator", "autoqild.mi_estimators.pytorch_utils", "autoqild.mi_estimators.tab_pfn_estimator", "autoqild.utilities", "autoqild.utilities.dimensionality_reduction_techniques", "autoqild.utilities.metrics", "autoqild.utilities.statistical_tests", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">autoqild</span></code> Python package", "Installation Guide", "Quickstart Guide"], "titleterms": {"The": 43, "api": [0, 43], "auto_gluon_estim": 29, "autogluon_classifi": 2, "autogluon_leakage_detector": 21, "automl": [1, 2, 3, 4, 5], "automl_cor": 3, "autoqild": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17, 18, 19, 20, 21, 22, 23, 24, 25, 26, 27, 28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38, 39, 40, 41, 42, 43], "bayes_predictor": 10, "bayes_search": [6, 7, 8], "bayes_search_cv": 7, "bayes_search_util": 8, "blind_classifi": 11, "classifi": [9, 10, 11, 12, 13, 45], "content": 43, "dataset_read": [14, 15, 16, 17, 18, 19], "detector": [20, 21, 22, 23, 24, 25, 26, 27], "dimensionality_reduction_techniqu": 40, "estim": 45, "fit": 45, "gmm_mi_estim": 30, "guid": [44, 45], "ild_base_class": 22, "instal": 44, "layer": 12, "method": 33, "metric": 41, "mi": 45, "mi_base_class": 31, "mi_estim": [28, 29, 30, 31, 32, 33, 34, 35, 36, 37, 38], "mi_estimator_classif": 32, "mi_estimator_detector": 23, "mine_estim": 33, "mine_estimator_ms": 34, "mlp_leakage_detector": 24, "model_configur": 4, "multi_layer_perceptron": 13, "neural_networks_torch": 35, "open_ml_padding_dr": 15, "open_ml_timming_dr": 16, "overview": 43, "packag": 43, "pc_softmax_estim": 36, "privat": 33, "python": 43, "pytorch_util": 37, "quickstart": 45, "random_forest_leakage_detector": 25, "refer": [0, 43], "sklearn_leakage_detector": 26, "statistical_test": 42, "step": 44, "synthetic_data_gener": 17, "synthetic_data_generator_dist": 18, "tab_pfn_estim": 38, "tabpfn_classifi": 5, "tabpfn_leakage_detector": 27, "util": [19, 39, 40, 41, 42]}})