Search.setIndex({"alltitles": {"API REFERENCE": [[17, null]], "Contents": [[17, "contents"]], "Fit a Classifier to Estimate MI": [[19, "fit-a-classifier-to-estimate-mi"]], "Installation Guide": [[18, null]], "Installation Steps": [[18, "installation-steps"]], "OVERVIEW": [[17, null]], "Quickstart Guide": [[19, null]], "The autoqild Python package": [[17, null]], "autoqild.automl": [[1, null]], "autoqild.automl.autogluon_classifier": [[2, null]], "autoqild.automl.automl_core": [[3, null]], "autoqild.automl.model_configurations": [[4, null]], "autoqild.automl.tabpfn_classifier": [[5, null]], "autoqild.classifiers": [[6, null]], "autoqild.classifiers.bayes_predictor": [[7, null]], "autoqild.classifiers.blind_classifiers": [[8, null]], "autoqild.classifiers.layers": [[9, null]], "autoqild.classifiers.multi_layer_perceptron": [[10, null]], "autoqild.dataset_readers": [[11, null]], "autoqild.dataset_readers.open_ml_padding_dr": [[12, null]], "autoqild.dataset_readers.open_ml_timming_dr": [[13, null]], "autoqild.dataset_readers.synthetic_data_generator": [[14, null]], "autoqild.dataset_readers.synthetic_data_generator_distance": [[15, null]], "autoqild.dataset_readers.utils": [[16, null]], "\ud83d\udcd6 API References": [[0, null]]}, "docnames": ["api", "api/autoqild.automl", "api/autoqild.automl.autogluon_classifier", "api/autoqild.automl.automl_core", "api/autoqild.automl.model_configurations", "api/autoqild.automl.tabpfn_classifier", "api/autoqild.classifiers", "api/autoqild.classifiers.bayes_predictor", "api/autoqild.classifiers.blind_classifiers", "api/autoqild.classifiers.layers", "api/autoqild.classifiers.multi_layer_perceptron", "api/autoqild.dataset_readers", "api/autoqild.dataset_readers.open_ml_padding_dr", "api/autoqild.dataset_readers.open_ml_timming_dr", "api/autoqild.dataset_readers.synthetic_data_generator", "api/autoqild.dataset_readers.synthetic_data_generator_distance", "api/autoqild.dataset_readers.utils", "index", "installation", "start"], "envversion": {"nbsphinx": 4, "sphinx": 62, "sphinx.domains.c": 3, "sphinx.domains.changeset": 1, "sphinx.domains.citation": 1, "sphinx.domains.cpp": 9, "sphinx.domains.index": 1, "sphinx.domains.javascript": 3, "sphinx.domains.math": 2, "sphinx.domains.python": 4, "sphinx.domains.rst": 2, "sphinx.domains.std": 2, "sphinx.ext.intersphinx": 1, "sphinx.ext.viewcode": 1}, "filenames": ["api.rst", "api/autoqild.automl.rst", "api/autoqild.automl.autogluon_classifier.rst", "api/autoqild.automl.automl_core.rst", "api/autoqild.automl.model_configurations.rst", "api/autoqild.automl.tabpfn_classifier.rst", "api/autoqild.classifiers.rst", "api/autoqild.classifiers.bayes_predictor.rst", "api/autoqild.classifiers.blind_classifiers.rst", "api/autoqild.classifiers.layers.rst", "api/autoqild.classifiers.multi_layer_perceptron.rst", "api/autoqild.dataset_readers.rst", "api/autoqild.dataset_readers.open_ml_padding_dr.rst", "api/autoqild.dataset_readers.open_ml_timming_dr.rst", "api/autoqild.dataset_readers.synthetic_data_generator.rst", "api/autoqild.dataset_readers.synthetic_data_generator_distance.rst", "api/autoqild.dataset_readers.utils.rst", "index.rst", "installation.rst", "start.rst"], "indexentries": {"__call__() (autoqild.classifiers.layers.normalizeddense method)": [[9, "autoqild.classifiers.layers.NormalizedDense.__call__", false]], "autogluonclassifier (class in autoqild.automl.autogluon_classifier)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier", false]], "automlclassifier (class in autoqild.automl.automl_core)": [[3, "autoqild.automl.automl_core.AutomlClassifier", false]], "autoqild.automl": [[1, "module-autoqild.automl", false]], "autoqild.automl.autogluon_classifier": [[2, "module-autoqild.automl.autogluon_classifier", false]], "autoqild.automl.automl_core": [[3, "module-autoqild.automl.automl_core", false]], "autoqild.automl.model_configurations": [[4, "module-autoqild.automl.model_configurations", false]], "autoqild.automl.tabpfn_classifier": [[5, "module-autoqild.automl.tabpfn_classifier", false]], "autoqild.classifiers": [[6, "module-autoqild.classifiers", false]], "autoqild.classifiers.bayes_predictor": [[7, "module-autoqild.classifiers.bayes_predictor", false]], "autoqild.classifiers.blind_classifiers": [[8, "module-autoqild.classifiers.blind_classifiers", false]], "autoqild.classifiers.layers": [[9, "module-autoqild.classifiers.layers", false]], "autoqild.classifiers.multi_layer_perceptron": [[10, "module-autoqild.classifiers.multi_layer_perceptron", false]], "autoqild.dataset_readers": [[11, "module-autoqild.dataset_readers", false]], "autoqild.dataset_readers.open_ml_padding_dr": [[12, "module-autoqild.dataset_readers.open_ml_padding_dr", false]], "autoqild.dataset_readers.open_ml_timming_dr": [[13, "module-autoqild.dataset_readers.open_ml_timming_dr", false]], "autoqild.dataset_readers.synthetic_data_generator": [[14, "module-autoqild.dataset_readers.synthetic_data_generator", false]], "autoqild.dataset_readers.synthetic_data_generator_distance": [[15, "module-autoqild.dataset_readers.synthetic_data_generator_distance", false]], "autoqild.dataset_readers.utils": [[16, "module-autoqild.dataset_readers.utils", false]], "autotabpfnclassifier (class in autoqild.automl.tabpfn_classifier)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier", false]], "bayes_predictor_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.bayes_predictor_mi", false]], "bayes_predictor_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.bayes_predictor_mi", false]], "bayes_predictor_pc_softmax_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.bayes_predictor_pc_softmax_mi", false]], "bayes_predictor_pc_softmax_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.bayes_predictor_pc_softmax_mi", false]], "bayespredictor (class in autoqild.classifiers.bayes_predictor)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor", false]], "calculate_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.calculate_mi", false]], "calculate_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.calculate_mi", false]], "clean_class_label() (in module autoqild.dataset_readers.utils)": [[16, "autoqild.dataset_readers.utils.clean_class_label", false]], "clear_memory() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.clear_memory", false]], "convert_to_dataframe() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.convert_to_dataframe", false]], "correct_class (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.correct_class", false]], "dataset_dictionary (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.dataset_dictionary", false]], "dataset_id (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.dataset_id", false]], "decision_function() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.decision_function", false]], "decision_function() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.decision_function", false]], "decision_function() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.decision_function", false]], "decision_function() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor.decision_function", false]], "decision_function() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.decision_function", false]], "delay (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.delay", false]], "entropy_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.entropy_y", false]], "entropy_y() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.entropy_y", false]], "factor (in module autoqild.dataset_readers.utils)": [[16, "autoqild.dataset_readers.utils.FACTOR", false]], "fit() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.fit", false]], "fit() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.fit", false]], "fit() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.fit", false]], "fit() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor.fit", false]], "fit() (autoqild.classifiers.blind_classifiers.priorclassifier method)": [[8, "autoqild.classifiers.blind_classifiers.PriorClassifier.fit", false]], "fit() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.fit", false]], "fold_id (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.fold_id", false]], "gen_types (in module autoqild.dataset_readers.utils)": [[16, "autoqild.dataset_readers.utils.GEN_TYPES", false]], "generate_cov_means() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.generate_cov_means", false]], "generate_cov_means() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.generate_cov_means", false]], "generate_dataset() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.generate_dataset", false]], "generate_dataset() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.generate_dataset", false]], "generate_samples_for_class() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.generate_samples_for_class", false]], "generate_samples_for_class() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.generate_samples_for_class", false]], "generate_samples_per_class() (in module autoqild.dataset_readers.utils)": [[16, "autoqild.dataset_readers.utils.generate_samples_per_class", false]], "get_bayes_mi() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_bayes_mi", false]], "get_bayes_mi() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_bayes_mi", false]], "get_bayes_predictor_scores() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor.get_bayes_predictor_scores", false]], "get_data() (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader method)": [[12, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.get_data", false]], "get_data() (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader method)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.get_data", false]], "get_k_rank_model() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.get_k_rank_model", false]], "get_model() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.get_model", false]], "get_params() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.get_params", false]], "get_params() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.get_params", false]], "get_prob_dist_x_given_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_dist_x_given_y", false]], "get_prob_dist_x_given_y() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_dist_x_given_y", false]], "get_prob_flip_y_given_x() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_flip_y_given_x", false]], "get_prob_fn_margx() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_fn_margx", false]], "get_prob_fn_margx() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_fn_margx", false]], "get_prob_x_given_flip_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_x_given_flip_y", false]], "get_prob_x_given_y() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_x_given_y", false]], "get_prob_x_given_y() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_x_given_y", false]], "get_prob_y_given_x() (autoqild.dataset_readers.synthetic_data_generator.syntheticdatasetgenerator method)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator.get_prob_y_given_x", false]], "get_prob_y_given_x() (autoqild.dataset_readers.synthetic_data_generator_distance.syntheticdatasetgeneratordistance method)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance.get_prob_y_given_x", false]], "get_sampled_imbalanced_data() (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader method)": [[12, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.get_sampled_imbalanced_data", false]], "get_sampled_imbalanced_data() (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader method)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.get_sampled_imbalanced_data", false]], "get_weights() (autoqild.classifiers.layers.normalizeddense method)": [[9, "autoqild.classifiers.layers.NormalizedDense.get_weights", false]], "hyperparameters (in module autoqild.automl.model_configurations)": [[4, "autoqild.automl.model_configurations.hyperparameters", false]], "imbalance (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.imbalance", false]], "label_col (in module autoqild.dataset_readers.utils)": [[16, "autoqild.dataset_readers.utils.LABEL_COL", false]], "logger (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[12, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.logger", false]], "logger (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.logger", false]], "majorityvoting (class in autoqild.classifiers.blind_classifiers)": [[8, "autoqild.classifiers.blind_classifiers.MajorityVoting", false]], "module": [[1, "module-autoqild.automl", false], [2, "module-autoqild.automl.autogluon_classifier", false], [3, "module-autoqild.automl.automl_core", false], [4, "module-autoqild.automl.model_configurations", false], [5, "module-autoqild.automl.tabpfn_classifier", false], [6, "module-autoqild.classifiers", false], [7, "module-autoqild.classifiers.bayes_predictor", false], [8, "module-autoqild.classifiers.blind_classifiers", false], [9, "module-autoqild.classifiers.layers", false], [10, "module-autoqild.classifiers.multi_layer_perceptron", false], [11, "module-autoqild.dataset_readers", false], [12, "module-autoqild.dataset_readers.open_ml_padding_dr", false], [13, "module-autoqild.dataset_readers.open_ml_timming_dr", false], [14, "module-autoqild.dataset_readers.synthetic_data_generator", false], [15, "module-autoqild.dataset_readers.synthetic_data_generator_distance", false], [16, "module-autoqild.dataset_readers.utils", false]], "multilayerperceptron (class in autoqild.classifiers.multi_layer_perceptron)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron", false]], "n_features (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.n_features", false]], "normalizeddense (class in autoqild.classifiers.layers)": [[9, "autoqild.classifiers.layers.NormalizedDense", false]], "openmlpaddingdatasetreader (class in autoqild.dataset_readers.open_ml_padding_dr)": [[12, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader", false]], "openmltimingdatasetreader (class in autoqild.dataset_readers.open_ml_timming_dr)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader", false]], "predict() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.predict", false]], "predict() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.predict", false]], "predict() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.predict", false]], "predict() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor.predict", false]], "predict() (autoqild.classifiers.blind_classifiers.priorclassifier method)": [[8, "autoqild.classifiers.blind_classifiers.PriorClassifier.predict", false]], "predict() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.predict", false]], "predict_proba() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.predict_proba", false]], "predict_proba() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.predict_proba", false]], "predict_proba() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.predict_proba", false]], "predict_proba() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor.predict_proba", false]], "predict_proba() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.predict_proba", false]], "priorclassifier (class in autoqild.classifiers.blind_classifiers)": [[8, "autoqild.classifiers.blind_classifiers.PriorClassifier", false]], "random_state (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.random_state", false]], "randomclassifier (class in autoqild.classifiers.blind_classifiers)": [[8, "autoqild.classifiers.blind_classifiers.RandomClassifier", false]], "reduced_hyperparameters (in module autoqild.automl.model_configurations)": [[4, "autoqild.automl.model_configurations.reduced_hyperparameters", false]], "reshape_inputs() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.reshape_inputs", false]], "score() (autoqild.automl.autogluon_classifier.autogluonclassifier method)": [[2, "autoqild.automl.autogluon_classifier.AutoGluonClassifier.score", false]], "score() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.score", false]], "score() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.score", false]], "score() (autoqild.classifiers.bayes_predictor.bayespredictor method)": [[7, "autoqild.classifiers.bayes_predictor.BayesPredictor.score", false]], "score() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.score", false]], "server (autoqild.dataset_readers.open_ml_padding_dr.openmlpaddingdatasetreader attribute)": [[12, "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader.server", false]], "set_params() (autoqild.automl.automl_core.automlclassifier method)": [[3, "autoqild.automl.automl_core.AutomlClassifier.set_params", false]], "set_params() (autoqild.classifiers.multi_layer_perceptron.multilayerperceptron method)": [[10, "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron.set_params", false]], "set_weights() (autoqild.classifiers.layers.normalizeddense method)": [[9, "autoqild.classifiers.layers.NormalizedDense.set_weights", false]], "syntheticdatasetgenerator (class in autoqild.dataset_readers.synthetic_data_generator)": [[14, "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator", false]], "syntheticdatasetgeneratordistance (class in autoqild.dataset_readers.synthetic_data_generator_distance)": [[15, "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance", false]], "transform() (autoqild.automl.tabpfn_classifier.autotabpfnclassifier method)": [[5, "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier.transform", false]], "vulnerable_classes (autoqild.dataset_readers.open_ml_timming_dr.openmltimingdatasetreader attribute)": [[13, "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader.vulnerable_classes", false]]}, "objects": {"autoqild": [[1, 0, 0, "-", "automl"], [6, 0, 0, "-", "classifiers"], [11, 0, 0, "-", "dataset_readers"]], "autoqild.automl": [[2, 0, 0, "-", "autogluon_classifier"], [3, 0, 0, "-", "automl_core"], [4, 0, 0, "-", "model_configurations"], [5, 0, 0, "-", "tabpfn_classifier"]], "autoqild.automl.autogluon_classifier": [[2, 1, 1, "", "AutoGluonClassifier"]], "autoqild.automl.autogluon_classifier.AutoGluonClassifier": [[2, 2, 1, "", "convert_to_dataframe"], [2, 2, 1, "", "decision_function"], [2, 2, 1, "", "fit"], [2, 2, 1, "", "get_k_rank_model"], [2, 2, 1, "", "get_model"], [2, 2, 1, "", "predict"], [2, 2, 1, "", "predict_proba"], [2, 2, 1, "", "score"]], "autoqild.automl.automl_core": [[3, 1, 1, "", "AutomlClassifier"]], "autoqild.automl.automl_core.AutomlClassifier": [[3, 2, 1, "", "decision_function"], [3, 2, 1, "", "fit"], [3, 2, 1, "", "get_params"], [3, 2, 1, "", "predict"], [3, 2, 1, "", "predict_proba"], [3, 2, 1, "", "score"], [3, 2, 1, "", "set_params"]], "autoqild.automl.model_configurations": [[4, 3, 1, "", "hyperparameters"], [4, 3, 1, "", "reduced_hyperparameters"]], "autoqild.automl.tabpfn_classifier": [[5, 1, 1, "", "AutoTabPFNClassifier"]], "autoqild.automl.tabpfn_classifier.AutoTabPFNClassifier": [[5, 2, 1, "", "clear_memory"], [5, 2, 1, "", "decision_function"], [5, 2, 1, "", "fit"], [5, 2, 1, "", "predict"], [5, 2, 1, "", "predict_proba"], [5, 2, 1, "", "score"], [5, 2, 1, "", "transform"]], "autoqild.classifiers": [[7, 0, 0, "-", "bayes_predictor"], [8, 0, 0, "-", "blind_classifiers"], [9, 0, 0, "-", "layers"], [10, 0, 0, "-", "multi_layer_perceptron"]], "autoqild.classifiers.bayes_predictor": [[7, 1, 1, "", "BayesPredictor"]], "autoqild.classifiers.bayes_predictor.BayesPredictor": [[7, 2, 1, "", "decision_function"], [7, 2, 1, "", "fit"], [7, 2, 1, "", "get_bayes_predictor_scores"], [7, 2, 1, "", "predict"], [7, 2, 1, "", "predict_proba"], [7, 2, 1, "", "score"]], "autoqild.classifiers.blind_classifiers": [[8, 1, 1, "", "MajorityVoting"], [8, 1, 1, "", "PriorClassifier"], [8, 1, 1, "", "RandomClassifier"]], "autoqild.classifiers.blind_classifiers.PriorClassifier": [[8, 2, 1, "", "fit"], [8, 2, 1, "", "predict"]], "autoqild.classifiers.layers": [[9, 1, 1, "", "NormalizedDense"]], "autoqild.classifiers.layers.NormalizedDense": [[9, 2, 1, "", "__call__"], [9, 2, 1, "", "get_weights"], [9, 2, 1, "", "set_weights"]], "autoqild.classifiers.multi_layer_perceptron": [[10, 1, 1, "", "MultiLayerPerceptron"]], "autoqild.classifiers.multi_layer_perceptron.MultiLayerPerceptron": [[10, 2, 1, "", "decision_function"], [10, 2, 1, "", "fit"], [10, 2, 1, "", "get_params"], [10, 2, 1, "", "predict"], [10, 2, 1, "", "predict_proba"], [10, 2, 1, "", "reshape_inputs"], [10, 2, 1, "", "score"], [10, 2, 1, "", "set_params"]], "autoqild.dataset_readers": [[12, 0, 0, "-", "open_ml_padding_dr"], [13, 0, 0, "-", "open_ml_timming_dr"], [14, 0, 0, "-", "synthetic_data_generator"], [15, 0, 0, "-", "synthetic_data_generator_distance"], [16, 0, 0, "-", "utils"]], "autoqild.dataset_readers.open_ml_padding_dr": [[12, 1, 1, "", "OpenMLPaddingDatasetReader"]], "autoqild.dataset_readers.open_ml_padding_dr.OpenMLPaddingDatasetReader": [[12, 2, 1, "", "get_data"], [12, 2, 1, "", "get_sampled_imbalanced_data"], [12, 4, 1, "", "logger"], [12, 4, 1, "", "server"]], "autoqild.dataset_readers.open_ml_timming_dr": [[13, 1, 1, "", "OpenMLTimingDatasetReader"]], "autoqild.dataset_readers.open_ml_timming_dr.OpenMLTimingDatasetReader": [[13, 4, 1, "", "correct_class"], [13, 4, 1, "", "dataset_dictionary"], [13, 4, 1, "", "dataset_id"], [13, 4, 1, "", "delay"], [13, 4, 1, "", "fold_id"], [13, 2, 1, "", "get_data"], [13, 2, 1, "", "get_sampled_imbalanced_data"], [13, 4, 1, "", "imbalance"], [13, 4, 1, "", "logger"], [13, 4, 1, "", "n_features"], [13, 4, 1, "", "random_state"], [13, 4, 1, "", "vulnerable_classes"]], "autoqild.dataset_readers.synthetic_data_generator": [[14, 1, 1, "", "SyntheticDatasetGenerator"]], "autoqild.dataset_readers.synthetic_data_generator.SyntheticDatasetGenerator": [[14, 2, 1, "", "bayes_predictor_mi"], [14, 2, 1, "", "bayes_predictor_pc_softmax_mi"], [14, 2, 1, "", "calculate_mi"], [14, 2, 1, "", "entropy_y"], [14, 2, 1, "", "generate_cov_means"], [14, 2, 1, "", "generate_dataset"], [14, 2, 1, "", "generate_samples_for_class"], [14, 2, 1, "", "get_bayes_mi"], [14, 2, 1, "", "get_prob_dist_x_given_y"], [14, 2, 1, "", "get_prob_flip_y_given_x"], [14, 2, 1, "", "get_prob_fn_margx"], [14, 2, 1, "", "get_prob_x_given_flip_y"], [14, 2, 1, "", "get_prob_x_given_y"], [14, 2, 1, "", "get_prob_y_given_x"]], "autoqild.dataset_readers.synthetic_data_generator_distance": [[15, 1, 1, "", "SyntheticDatasetGeneratorDistance"]], "autoqild.dataset_readers.synthetic_data_generator_distance.SyntheticDatasetGeneratorDistance": [[15, 2, 1, "", "bayes_predictor_mi"], [15, 2, 1, "", "bayes_predictor_pc_softmax_mi"], [15, 2, 1, "", "calculate_mi"], [15, 2, 1, "", "entropy_y"], [15, 2, 1, "", "generate_cov_means"], [15, 2, 1, "", "generate_dataset"], [15, 2, 1, "", "generate_samples_for_class"], [15, 2, 1, "", "get_bayes_mi"], [15, 2, 1, "", "get_prob_dist_x_given_y"], [15, 2, 1, "", "get_prob_fn_margx"], [15, 2, 1, "", "get_prob_x_given_y"], [15, 2, 1, "", "get_prob_y_given_x"]], "autoqild.dataset_readers.utils": [[16, 3, 1, "", "FACTOR"], [16, 3, 1, "", "GEN_TYPES"], [16, 3, 1, "", "LABEL_COL"], [16, 5, 1, "", "clean_class_label"], [16, 5, 1, "", "generate_samples_per_class"]]}, "objnames": {"0": ["py", "module", "Python module"], "1": ["py", "class", "Python class"], "2": ["py", "method", "Python method"], "3": ["py", "data", "Python data"], "4": ["py", "attribute", "Python attribute"], "5": ["py", "function", "Python function"]}, "objtypes": {"0": "py:module", "1": "py:class", "2": "py:method", "3": "py:data", "4": "py:attribute", "5": "py:function"}, "terms": {"": [3, 10], "0": [2, 3, 4, 5, 7, 10, 12, 13, 14, 15, 16, 19], "0001": 10, "001": 10, "01": 4, "05": [4, 16], "06": 4, "1": [4, 10, 12, 13, 14, 15, 16, 19], "10": [4, 10, 18, 19], "100": [5, 10], "1000": 16, "1751928845077875": 19, "1800": 2, "1e": 4, "2": [4, 14, 15, 19], "20": [4, 5], "200": 19, "256": 4, "3": [4, 18, 19], "300": 4, "3193094645863748": 19, "32": [5, 10], "4": [4, 19], "42": [14, 15, 19], "5": [4, 16, 19], "50": [4, 5, 10], "500": [14, 15], "5000": 4, "584961043823006": 19, "6": [2, 4], "600": 19, "8": 4, "95": 4, "A": [9, 13, 14, 15, 16], "By": 17, "If": [3, 9, 10, 12, 13, 14, 15, 16], "It": [11, 12, 13, 14, 15, 16, 17], "OR": 18, "The": [1, 2, 3, 10, 12, 13, 14, 15, 16], "There": 19, "These": 4, "With": 17, "__": [3, 10], "__call__": 9, "_multivari": [14, 15], "abov": 18, "abstract": 3, "acc": [5, 10], "accord": 8, "accur": 17, "accuraci": [2, 3, 5, 10, 19], "accuracy_scor": 19, "across": 16, "activ": [9, 10, 18], "adam": 10, "addit": [2, 5, 9, 10, 12, 13, 14, 15], "additon": 6, "address": 17, "adjust": [14, 15], "advanc": 17, "affect": [14, 15], "after": [2, 9, 12, 13, 14, 15], "all": [14, 15, 16], "allow": [14, 15, 16], "alpbench": 18, "alreadi": 19, "also": 6, "amount": 19, "an": [2, 5, 12, 13, 14, 15, 17], "analysi": 17, "ani": 16, "appli": [9, 10, 12, 13, 14, 15, 16], "approach": 17, "ar": [3, 4, 5, 10, 13, 16], "arg": 9, "argument": [2, 5, 9, 10, 12, 13, 14, 15], "arrai": [2, 3, 5, 8, 10, 12, 13, 14, 15], "art": 17, "associ": [12, 13], "assum": [14, 15], "attack": [12, 13], "attribut": [4, 16], "auto": 2, "auto_stack": 2, "autogluon": [1, 2, 4], "autogluonclassifi": 2, "autom": [1, 17], "automat": 16, "automl": [17, 19], "automlclassifi": [2, 3, 5], "automlquantildetect": [17, 18, 19], "autoqild": [0, 19], "autotabpfnclassifi": 5, "bagging_fract": 4, "balanc": [2, 4, 5, 10], "balanced_subsampl": 4, "base": [2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16], "base_path": 5, "baseestim": [3, 7, 10], "batch": 9, "batch_norm": [9, 10], "batch_siz": [5, 10], "bay": [6, 14, 15], "bayes_predictor_mi": [14, 15], "bayes_predictor_pc_softmax_mi": [14, 15], "bayespredictor": 7, "befor": 9, "between": [12, 13, 14, 15], "binari": 16, "bleichenbach": [12, 13], "blind": 6, "bool": [2, 3, 9, 10, 12, 13], "boost": 2, "both": 16, "build": [2, 5], "calcul": [14, 15, 16, 19], "calculate_mi": [14, 15, 19], "callback": 10, "can": [14, 15, 17, 19], "capit": 16, "case": 5, "cat": 4, "categor": [4, 10], "categorical_crossentropi": 10, "cd": 18, "challeng": 17, "channel": [12, 13], "character": 5, "class": [2, 3, 5, 6, 7, 8, 9, 10, 12, 13, 14, 15, 16], "class_label": [12, 13, 14, 15], "class_label_exampl": 16, "class_weight": 4, "classficationmiestim": 19, "classif": [2, 5, 8, 17], "classifi": 17, "classifiermixin": [3, 7, 10], "clean": [12, 13, 16], "clean_class_label": 16, "clear": 5, "clear_memori": 5, "clone": 18, "code": [12, 19], "column": 16, "com": 18, "combin": 5, "commonli": 4, "compar": 19, "complet": 5, "compon": [3, 5, 10], "comprehens": 17, "comput": [2, 5, 10, 14, 15], "conda": 18, "condit": [14, 15], "confid": [3, 17], "configur": [4, 5], "coninccid": 3, "consist": 16, "constant": [6, 16, 19], "contain": [2, 3, 6, 9, 10, 14, 15], "convert": 2, "convert_to_datafram": 2, "correct": 13, "correct_class": 13, "correctli": 13, "correspond": [14, 15], "covari": [14, 15], "creat": [12, 13, 14, 15, 16, 18], "create_dataset": [12, 13], "criterion": 4, "critic": 17, "custom": [9, 16], "data": [2, 3, 5, 8, 10, 11, 12, 13, 14, 15], "datafram": 2, "dataset": [6, 11, 12, 13, 14, 15, 16, 17, 19], "dataset_dictionari": 13, "dataset_gener": 19, "dataset_id": [12, 13], "dataset_obj": 7, "dataset_read": [17, 19], "decis": [2, 5, 10], "decision_funct": [2, 3, 5, 7, 10], "deep": [3, 10], "default": [2, 3, 5, 9, 10, 12, 13, 14, 15, 16], "defin": 4, "definit": [14, 15], "delai": 13, "delet": 2, "delete_tmp_folder_after_termin": 2, "dens": 9, "depth": 4, "descript": 13, "design": 13, "detect": [6, 17], "df_data": 2, "dict": [2, 3, 5, 9, 10, 12, 13, 14, 15, 16], "dictionari": [4, 13, 14, 15, 16], "differ": 19, "dimension": [2, 5, 9], "displai": 16, "distanc": [3, 4, 14, 15], "distribut": [5, 14, 15, 16], "document": 0, "dropout_prob": 4, "dummyclassifi": 8, "dure": [10, 12, 13], "e": 9, "each": [3, 4, 10, 12, 14, 15, 16], "early_stop": 10, "effect": 17, "element": 5, "emb_drop": 4, "embed": 5, "ensembl": 5, "entropi": [4, 14, 15], "entropy_i": [14, 15], "environ": 18, "epoch": 10, "equal": 16, "error": 12, "especi": 16, "estim": [3, 8, 10, 14, 15, 17], "estimate_mi": 19, "estimated_mi_log_loss": 19, "estimated_mi_mid_point": 19, "eval_metr": 2, "evalu": [2, 11], "exampl": [16, 19], "exist": 19, "exploit": 12, "export": 18, "extend": 12, "extra": 16, "extract": 12, "extratreesclassifi": 5, "f": 19, "factor": [5, 16], "fals": [9, 10], "fastai": 4, "featur": [2, 5, 10, 12, 13, 14, 15], "feature_fract": 4, "final": 1, "find": [5, 19], "fit": [2, 3, 5, 7, 8, 10], "flip": [14, 15], "flip_i": [14, 19], "float": [2, 3, 5, 10, 12, 13, 14, 15, 16], "focu": [14, 15], "fold": [13, 14, 15], "fold_id": [13, 14, 15], "folder": 2, "forest": 19, "form": [2, 3, 5, 10], "format": [10, 13, 16], "fraction": 10, "framework": 1, "from": [2, 4, 12, 13, 16, 19], "full": [14, 15], "function": [0, 2, 5, 6, 9, 10, 14, 15, 16], "gamma": 4, "gbm": 4, "gen_typ": [14, 15, 16], "gener": [6, 11, 14, 15, 16, 19], "generate_cov_mean": [14, 15], "generate_dataset": [14, 15, 19], "generate_samples_for_class": [14, 15], "generate_samples_per_class": 16, "get": [2, 3, 6, 10, 14, 15], "get_bayes_mi": [14, 15], "get_bayes_predictor_scor": 7, "get_data": [12, 13], "get_k_rank_model": 2, "get_model": 2, "get_param": [3, 10], "get_prob_dist_x_given_i": [14, 15], "get_prob_flip_y_given_x": 14, "get_prob_fn_margx": [14, 15], "get_prob_x_given_flip_i": 14, "get_prob_x_given_i": [14, 15], "get_prob_y_given_x": [14, 15], "get_sampled_imbalanced_data": [12, 13], "get_weight": 9, "gini": 4, "git": 18, "github": 18, "given": [3, 8, 14, 15], "greater": 16, "ground": 19, "ground_truth_mi": 19, "guid": 17, "h": [14, 15], "have": [3, 10, 14, 15], "here": 16, "hidden_s": 4, "http": 18, "human": 16, "hyperparamet": [2, 4], "hyperplan": 3, "i": [3, 4, 6, 9, 12, 13, 14, 15, 16, 17, 18], "id": [12, 13, 14, 15], "ild": 18, "imbal": [12, 13, 14, 15, 16], "imbalanc": [12, 13], "implement": [5, 6, 16], "import": [5, 19], "includ": 11, "incorrectli": 13, "inform": [6, 12, 13, 14, 15, 16, 17, 19], "initi": [12, 13], "input": [2, 3, 5, 8, 9, 10, 14, 15, 16], "instal": 17, "instanc": [3, 10, 12, 13, 14, 15], "int": [2, 4, 5, 9, 10, 12, 13, 14, 15, 16], "integ": [9, 14, 15], "intend": 18, "involv": 13, "its": 2, "just": 6, "k": 2, "k_class": [14, 15], "kei": [13, 14, 15, 16], "kera": [6, 10], "kernel_initi": 10, "keyword": [2, 5, 9, 10, 12, 13, 14, 15], "knn": 4, "kwarg": [2, 5, 7, 8, 9, 10, 12, 13, 14, 15], "kwd": [2, 3, 5, 7, 9, 10], "l2_leaf_reg": 4, "label": [2, 3, 5, 8, 10, 12, 13, 14, 15, 16], "label_col": 16, "lambda": [14, 15], "lambda_l1": 4, "lambda_l2": 4, "latter": [3, 10], "layer": 6, "lda": 5, "leaderboard": 2, "leakag": [6, 12, 13, 17], "leakdetectai": 18, "learn": [1, 4, 5, 6, 17, 19], "learning_r": [4, 10], "lecun_norm": 10, "less": 16, "level": [2, 5, 14, 15, 16], "leverag": 17, "like": [1, 2, 3, 4, 5, 8, 10, 12, 13, 14, 15], "limit": 2, "linear": [5, 9], "list": [10, 13, 14, 15, 16], "log": [12, 13, 14, 15, 16, 19], "log2": 4, "log_loss_mi_estim": 19, "logger": [12, 13, 16], "loss": [14, 15, 19], "loss_funct": 10, "lower": 4, "machin": [1, 4, 17], "major": [12, 13], "majorityvot": 8, "make": [1, 6, 16], "manipul": 12, "map": [3, 10], "marg_x": [14, 15], "margin": [14, 15], "matric": [5, 14, 15], "matrix": [2, 5, 10, 12, 13, 14, 15], "max_depth": 4, "max_featur": 4, "maximum": 10, "mcmc": [14, 15], "mcmcbayesmi": [14, 15], "mcmcloglossbayesmi": [14, 15], "mcmcpcsoftmaxbayesmi": [14, 15], "mcmcsoftmaxbayesmi": [14, 15], "mean": [3, 14, 15], "memori": 5, "messag": 13, "meta": 5, "method": [3, 10, 12, 13, 14, 15, 19], "metric": [2, 3, 10, 14, 15, 19], "metric_nam": [14, 15], "mi": [14, 15, 17], "mi_estim": 19, "mi_estimator_classif": 19, "mi_pp": [14, 15], "microsecond": 13, "mid": 19, "mid_point_mi_estim": 19, "min_data_in_leaf": 4, "min_samples_leaf": 4, "min_samples_split": 4, "minor": [12, 13, 14, 15, 16], "mlp": 10, "mode": 10, "model": [2, 4, 5, 10, 19], "model_nam": 2, "model_save_path": 10, "modifi": [14, 15], "modul": [1, 4, 6, 11, 16], "more": [5, 16], "multi": [6, 16], "multilayerperceptron": 10, "multipl": 16, "multivari": [14, 15], "multivariate_normal_frozen": [14, 15], "must": [5, 12, 13, 14, 15, 16], "mutual": [14, 15, 17, 19], "mutual_inform": [14, 15], "n_class": [2, 3, 5, 10, 14, 15, 16, 19], "n_ensembl": 5, "n_estim": 4, "n_featur": [2, 3, 5, 8, 10, 12, 13, 14, 15, 19], "n_hidden": 10, "n_neighbor": 4, "n_output": 3, "n_reduc": 5, "n_sampl": [2, 3, 5, 8, 10, 12, 13, 14, 15], "n_unit": 10, "name": [2, 3, 10, 14, 15, 16, 18], "necessari": 10, "neg": 5, "neighbor": 5, "nest": [3, 10], "network": 12, "new": 5, "nmf": 5, "nn_torch": 4, "nois": [14, 15, 19], "non": 5, "none": [2, 3, 5, 7, 8, 10, 12, 13, 16], "normal": [9, 14, 15], "normalize_before_activ": 9, "normalizeddens": 9, "note": 16, "num_lay": 4, "num_leav": 4, "number": [2, 5, 10, 12, 13, 14, 15, 16], "object": [0, 3, 10, 13, 14, 15, 16], "obtain": 5, "offer": [1, 11], "one": [5, 14, 15, 16], "openml": [11, 12, 13], "openmlpaddingdatasetread": 12, "openmltimingdatasetread": [12, 13], "oper": 16, "optimizer_str": 10, "option": [2, 5, 8, 9, 10, 12, 13, 16], "orign": 6, "orthogon": [14, 15], "other": 16, "output": [6, 9, 16], "output_fold": 2, "overlap": [14, 15], "p": 4, "p_pred": 10, "packag": [1, 6], "pad": 12, "panda": 2, "param": [3, 10], "paramet": [2, 3, 5, 8, 9, 10, 12, 13, 14, 15, 16], "pass": 9, "path": [2, 5], "pc": [14, 15], "pca": 5, "pdf": 6, "pedictor": [14, 15], "per": [14, 15, 16], "perceptron": 6, "perform": [8, 12], "pip": 18, "pipelin": [1, 3, 4, 10], "point": 19, "posit": [9, 14, 15], "possibl": [3, 10], "power": 17, "pre": 9, "precis": 17, "predefin": 2, "predict": [1, 2, 3, 5, 6, 7, 8, 10, 19], "predict_proba": [2, 3, 5, 7, 10], "predictor": 6, "preidction": 5, "princip": 5, "print": 19, "priorclassifi": 8, "prob_x_given_flip_i": 14, "prob_x_given_i": [14, 15], "prob_y_given_x": [14, 15], "probabl": [2, 3, 5, 10, 14, 15], "process": [12, 13, 14, 15, 16], "proport": [3, 14, 15, 16], "provid": [1, 5, 12, 13, 14, 15, 16], "public": 0, "purpos": [5, 11], "py": 18, "python": 18, "quantif": 17, "quantifi": 17, "quickstart": 17, "quit": 19, "r": [3, 18], "rais": 16, "random": [2, 5, 12, 13, 14, 15, 19], "random_st": [2, 5, 7, 8, 10, 12, 13, 14, 15, 19], "randomclassifi": 8, "randomforest": 5, "randomforestclassifi": 5, "randomst": [12, 13, 14, 15], "rank": 2, "ratio": [12, 13, 16], "read": [11, 12, 13], "readabl": 16, "reader": [12, 13], "real": [4, 10], "realm": 17, "recogn": 16, "recurs": 5, "recursive_feature_elimination_et": 5, "recursive_feature_elimination_rf": 5, "reduc": 5, "reduced_hyperparamet": 4, "reduct": 5, "reduction_techniqu": 5, "reg_alpha": 4, "reg_lambda": 4, "reg_strength": 10, "relat": 12, "releas": [5, 17], "relu": [9, 10], "remain": 5, "remov": [2, 5, 16], "remove_boosting_model": 2, "replac": 16, "repositori": 18, "repres": 13, "reproduc": [2, 5, 12, 13, 14, 15], "requir": 18, "reshap": 10, "reshape_input": 10, "resourc": 5, "respect": [12, 13], "result": 19, "retriev": [2, 12, 13, 16], "return": [2, 3, 5, 8, 9, 10, 12, 13, 14, 15, 16], "rf": 4, "same": [14, 15], "sampl": [2, 3, 5, 8, 10, 12, 13, 14, 15, 16], "sample_weight": [2, 3, 5, 7, 8, 10], "samples_per_class": [14, 15, 16, 19], "save": [2, 5], "scale": 16, "scenario": [12, 13, 14, 15, 16], "scikit": 5, "scipi": [14, 15], "score": [2, 3, 5, 7, 10], "seed": [14, 15], "select": [5, 14, 15], "select_from_model_et": 5, "select_from_model_rf": 5, "self": [3, 8, 10], "semi": [14, 15], "separ": 5, "server": 12, "set": [3, 5, 9, 10], "set_param": [3, 10], "set_weight": 9, "setup": 18, "sever": 4, "shape": [2, 3, 5, 8, 10, 12, 13, 14, 15, 19], "should": [14, 15, 16], "shown": 16, "side": [12, 13], "sign": 3, "similar": 19, "simpl": [3, 10], "simpler": 4, "simul": [12, 13, 14, 15], "singl": [14, 15, 16], "sklearn": 19, "sklearn_allow_deprecated_sklearn_package_instal": 18, "small": 19, "smooth": 4, "snippet": 19, "so": [3, 10], "softmax": [14, 15], "some": 19, "sometim": 3, "sourc": [2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 16], "space": [4, 5, 9, 16], "specif": [12, 13, 14, 15], "specifi": [2, 9, 13, 14, 15, 16], "sqrt": 4, "stack": 2, "stat": [14, 15], "state": [2, 5, 12, 13, 14, 15, 17], "statist": 17, "step": 19, "stochast": 5, "str": [2, 5, 9, 12, 13, 14, 15, 16], "string": 16, "subobject": [3, 10], "summari": 19, "support": [4, 16], "synthet": [11, 14, 15, 19], "synthetic_data_gener": 19, "syntheticdatasetgener": [14, 19], "syntheticdatasetgeneratordist": 15, "system": 17, "t": [3, 5], "tabpfn": [1, 5], "tabular": 2, "tabularpredictor": 2, "tailor": 12, "target": [2, 5, 8, 10, 12, 13, 14, 15], "techniqu": 5, "temporari": 2, "tensor": 9, "test": [3, 11, 17], "th": 2, "than": 16, "thei": 16, "thi": [3, 4, 6, 10, 12, 13, 14, 15, 16, 17], "those": 5, "time": [2, 5, 12, 13], "time_limit": 2, "tool": [1, 19], "toolkit": 17, "torch": 5, "total": 16, "trace": 12, "train": [2, 5, 8, 10], "transform": 5, "true": [2, 3, 5, 9, 10, 12, 13, 18], "truth": 19, "tsne": 5, "tune": 4, "tupl": [9, 13, 14, 15], "two": 5, "txt": 18, "type": [2, 3, 5, 8, 9, 10, 12, 13, 14, 15, 16], "uncorrel": 5, "underscor": 16, "uniform": 4, "unit": 9, "updat": [3, 10], "upper": 4, "us": [1, 2, 4, 5, 6, 9, 10, 14, 15, 16, 19], "use_hyperparamet": 2, "user": [16, 17], "util": [11, 17, 19], "valid": 10, "validation_split": 10, "valu": [2, 3, 5, 6, 8, 10, 13, 14, 15, 16], "valueerror": 16, "vari": [14, 15], "variabl": [5, 10], "vector": [2, 5, 10, 12, 13, 14, 15], "verbos": [2, 3, 5, 7, 10, 16], "visual": 5, "vulner": 13, "vulnerable_class": 13, "w": 3, "w_b": 9, "w_d": 9, "wai": [16, 19], "wd": 4, "we": 6, "weight": [2, 3, 4, 5, 8, 9, 10], "well": [3, 10], "when": [14, 15, 16], "where": [13, 16], "whether": [2, 16], "which": [4, 5, 6, 12, 13, 14, 15, 19], "within": 17, "word": 16, "work": [3, 10, 18], "x": [2, 3, 5, 7, 8, 9, 10, 12, 13, 14, 15, 19], "xgb": 4, "xt": 4, "y": [2, 3, 5, 7, 8, 10, 12, 13, 14, 15, 19], "y_pred": [2, 3, 5, 8, 10, 19], "y_proba": 3, "you": 19}, "titles": ["\ud83d\udcd6 API References", "autoqild.automl", "autoqild.automl.autogluon_classifier", "autoqild.automl.automl_core", "autoqild.automl.model_configurations", "autoqild.automl.tabpfn_classifier", "autoqild.classifiers", "autoqild.classifiers.bayes_predictor", "autoqild.classifiers.blind_classifiers", "autoqild.classifiers.layers", "autoqild.classifiers.multi_layer_perceptron", "autoqild.dataset_readers", "autoqild.dataset_readers.open_ml_padding_dr", "autoqild.dataset_readers.open_ml_timming_dr", "autoqild.dataset_readers.synthetic_data_generator", "autoqild.dataset_readers.synthetic_data_generator_distance", "autoqild.dataset_readers.utils", "The <code class=\"docutils literal notranslate\"><span class=\"pre\">autoqild</span></code> Python package", "Installation Guide", "Quickstart Guide"], "titleterms": {"The": 17, "api": [0, 17], "autogluon_classifi": 2, "automl": [1, 2, 3, 4, 5], "automl_cor": 3, "autoqild": [1, 2, 3, 4, 5, 6, 7, 8, 9, 10, 11, 12, 13, 14, 15, 16, 17], "bayes_predictor": 7, "blind_classifi": 8, "classifi": [6, 7, 8, 9, 10, 19], "content": 17, "dataset_read": [11, 12, 13, 14, 15, 16], "estim": 19, "fit": 19, "guid": [18, 19], "instal": 18, "layer": 9, "mi": 19, "model_configur": 4, "multi_layer_perceptron": 10, "open_ml_padding_dr": 12, "open_ml_timming_dr": 13, "overview": 17, "packag": 17, "python": 17, "quickstart": 19, "refer": [0, 17], "step": 18, "synthetic_data_gener": 14, "synthetic_data_generator_dist": 15, "tabpfn_classifi": 5, "util": 16}})